/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "node_modules_react-notion-x_build_third-party_collection_js";
exports.ids = ["node_modules_react-notion-x_build_third-party_collection_js"];
exports.modules = {

/***/ "./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("function e(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}var t=e(__webpack_require__(/*! react */ \"react\")),n=e(__webpack_require__(/*! react-intersection-observer */ \"react-intersection-observer\")),r=__webpack_require__(/*! unionize */ \"unionize\"),o=function(e,t){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};var a,i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function c(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&(n[r[o]]=e[r[o]])}return n}(a=exports.ImageState||(exports.ImageState={})).NotAsked=\"NotAsked\",a.Loading=\"Loading\",a.LoadSuccess=\"LoadSuccess\",a.LoadError=\"LoadError\";var u=r.unionize({NotAsked:{},Buffering:{},Loading:{},LoadSuccess:{},LoadError:r.ofType()}),s=r.unionize({ViewChanged:r.ofType(),BufferingEnded:{},LoadSuccess:{},LoadError:r.ofType()}),d=function(e,t){return function(n){var r=m(g(e,t));r.promise.then(function(e){return n.update(s.LoadSuccess({}))}).catch(function(e){e.isCanceled||n.update(s.LoadError({msg:\"Failed to load\"}))}),n.promiseCache.loading=r}},f=function(e){e.promiseCache.buffering.cancel()},p=function(e){function r(t){var n=e.call(this,t)||this;return n.promiseCache={},n.initialState=u.NotAsked(),n.state=n.initialState,n.update=n.update.bind(n),n}return function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(r,e),r.reducer=function(e,t,n){return s.match(e,{ViewChanged:function(e){return!0===e.inView?n.src?u.match(t,{NotAsked:function(){return n.debounceDurationMs?{nextState:u.Buffering(),cmd:(e=n.debounceDurationMs,function(t){var n=m(l(e));n.promise.then(function(){return t.update(s.BufferingEnded())}).catch(function(e){}),t.promiseCache.buffering=n})}:{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)};var e},default:function(){return{nextState:t}}}):{nextState:u.LoadSuccess()}:u.match(t,{Buffering:function(){return{nextState:u.NotAsked(),cmd:f}},default:function(){return{nextState:t}}})},BufferingEnded:function(){return{nextState:u.Loading(),cmd:d(n,n.experimentalDecode)}},LoadSuccess:function(){return{nextState:u.LoadSuccess()}},LoadError:function(e){return{nextState:u.LoadError(e)}}})},r.prototype.update=function(e){var t=this,n=r.reducer(e,this.state,this.props),o=n.nextState,a=n.cmd;this.props.debugActions&&( false&&0,console.log({action:e,prevState:this.state,nextState:o})),this.setState(o,function(){return a&&a(t)})},r.prototype.componentWillUnmount=function(){this.promiseCache.loading&&this.promiseCache.loading.cancel(),this.promiseCache.buffering&&this.promiseCache.buffering.cancel(),this.promiseCache={}},r.prototype.render=function(){var e=this,r=this.props,o=r.children,a=r.loadEagerly,d=r.observerProps,f=c(r,[\"children\",\"loadEagerly\",\"observerProps\",\"experimentalDecode\",\"debounceDurationMs\",\"debugActions\"]);return a?o({imageState:u.LoadSuccess().tag,imageProps:f}):t.createElement(n,i({rootMargin:\"50px 0px\",threshold:.01},d,{onChange:function(t){return e.update(s.ViewChanged({inView:t}))}}),function(t){return o({imageState:\"Buffering\"===e.state.tag?exports.ImageState.Loading:e.state.tag,imageProps:f,ref:t.ref})})},r.displayName=\"LazyImageFull\",r}(t.Component),g=function(e,t){var n=e.src,r=e.srcSet,o=e.alt,a=e.sizes;return void 0===t&&(t=!1),new Promise(function(e,i){var c=new Image;if(r&&(c.srcset=r),o&&(c.alt=o),a&&(c.sizes=a),c.src=n,t&&\"decode\"in c)return c.decode().then(function(t){return e(t)}).catch(function(e){return i(e)});c.onload=e,c.onerror=i})},l=function(e){return new Promise(function(t){return setTimeout(t,e)})},m=function(e){var t=!1;return{promise:new Promise(function(n,r){e.then(function(e){return t?r({isCanceled:!0}):n(e)}),e.catch(function(e){return r(t?{isCanceled:!0}:e)})}),cancel:function(){t=!0}}},h=function(e){var n=e.actual,r=e.placeholder,o=e.loading,a=e.error,u=c(e,[\"actual\",\"placeholder\",\"loading\",\"error\"]);return t.createElement(p,i({},u),function(e){var t=e.imageProps,i=e.ref;switch(e.imageState){case exports.ImageState.NotAsked:return!!r&&r({imageProps:t,ref:i});case exports.ImageState.Loading:return o?o():!!r&&r({imageProps:t,ref:i});case exports.ImageState.LoadSuccess:return n({imageProps:t});case exports.ImageState.LoadError:return a?a():n({imageProps:t})}})};h.displayName=\"LazyImage\",exports.LazyImage=h,exports.LazyImageFull=p;\n//# sourceMappingURL=react-lazy-images.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\n");

/***/ }),

/***/ "./node_modules/react-notion-x/build/third-party/collection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-notion-x/build/third-party/collection.js ***!
  \*********************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Collection\": () => (/* binding */ Collection),\n/* harmony export */   \"Property\": () => (/* binding */ PropertyImplMemo)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var notion_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! notion-utils */ \"notion-utils\");\n/* harmony import */ var react_use__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-use */ \"react-use\");\n/* harmony import */ var _radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @radix-ui/react-dropdown-menu */ \"@radix-ui/react-dropdown-menu\");\n/* harmony import */ var react_fast_compare__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-fast-compare */ \"react-fast-compare\");\n/* harmony import */ var react_lazy_images__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-lazy-images */ \"./node_modules/react-notion-x/node_modules/react-lazy-images/dist/react-lazy-images.js\");\n/* harmony import */ var react_image__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-image */ \"react-image\");\n/* harmony import */ var react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-hotkeys-hook */ \"react-hotkeys-hook\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([notion_utils__WEBPACK_IMPORTED_MODULE_1__]);\nnotion_utils__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// ../../node_modules/format-number/index.js\nvar require_format_number = __commonJS({\n  \"../../node_modules/format-number/index.js\"(exports, module) {\n    module.exports = formatter;\n    module.exports.default = formatter;\n    function formatter(options) {\n      options = options || {};\n      options.negativeType = options.negativeType || (options.negative === \"R\" ? \"right\" : \"left\");\n      if (typeof options.negativeLeftSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"left\":\n            options.negativeLeftSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeLeftSymbol = \"(\";\n            break;\n          default:\n            options.negativeLeftSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeRightSymbol !== \"string\") {\n        switch (options.negativeType) {\n          case \"right\":\n            options.negativeRightSymbol = \"-\";\n            break;\n          case \"brackets\":\n            options.negativeRightSymbol = \")\";\n            break;\n          default:\n            options.negativeRightSymbol = \"\";\n        }\n      }\n      if (typeof options.negativeLeftOut !== \"boolean\") {\n        options.negativeLeftOut = options.negativeOut === false ? false : true;\n      }\n      if (typeof options.negativeRightOut !== \"boolean\") {\n        options.negativeRightOut = options.negativeOut === false ? false : true;\n      }\n      options.prefix = options.prefix || \"\";\n      options.suffix = options.suffix || \"\";\n      if (typeof options.integerSeparator !== \"string\") {\n        options.integerSeparator = typeof options.separator === \"string\" ? options.separator : \",\";\n      }\n      options.decimalsSeparator = typeof options.decimalsSeparator === \"string\" ? options.decimalsSeparator : \"\";\n      options.decimal = options.decimal || \".\";\n      options.padLeft = options.padLeft || -1;\n      options.padRight = options.padRight || -1;\n      function format4(number, overrideOptions) {\n        overrideOptions = overrideOptions || {};\n        if (number || number === 0) {\n          number = \"\" + number;\n        } else {\n          return \"\";\n        }\n        var output = [];\n        var negative = number.charAt(0) === \"-\";\n        number = number.replace(/^\\-/g, \"\");\n        if (!options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        if (negative) {\n          output.push(options.negativeLeftSymbol);\n        }\n        if (options.negativeLeftOut && !overrideOptions.noUnits) {\n          output.push(options.prefix);\n        }\n        number = number.split(\".\");\n        if (options.round != null)\n          round(number, options.round);\n        if (options.truncate != null)\n          number[1] = truncate(number[1], options.truncate);\n        if (options.padLeft > 0)\n          number[0] = padLeft(number[0], options.padLeft);\n        if (options.padRight > 0)\n          number[1] = padRight(number[1], options.padRight);\n        if (!overrideOptions.noSeparator && number[1])\n          number[1] = addDecimalSeparators(number[1], options.decimalsSeparator);\n        if (!overrideOptions.noSeparator && number[0])\n          number[0] = addIntegerSeparators(number[0], options.integerSeparator);\n        output.push(number[0]);\n        if (number[1]) {\n          output.push(options.decimal);\n          output.push(number[1]);\n        }\n        if (options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        if (negative) {\n          output.push(options.negativeRightSymbol);\n        }\n        if (!options.negativeRightOut && !overrideOptions.noUnits) {\n          output.push(options.suffix);\n        }\n        return output.join(\"\");\n      }\n      format4.negative = options.negative;\n      format4.negativeOut = options.negativeOut;\n      format4.negativeType = options.negativeType;\n      format4.negativeLeftOut = options.negativeLeftOut;\n      format4.negativeLeftSymbol = options.negativeLeftSymbol;\n      format4.negativeRightOut = options.negativeRightOut;\n      format4.negativeRightSymbol = options.negativeRightSymbol;\n      format4.prefix = options.prefix;\n      format4.suffix = options.suffix;\n      format4.separate = options.separate;\n      format4.integerSeparator = options.integerSeparator;\n      format4.decimalsSeparator = options.decimalsSeparator;\n      format4.decimal = options.decimal;\n      format4.padLeft = options.padLeft;\n      format4.padRight = options.padRight;\n      format4.truncate = options.truncate;\n      format4.round = options.round;\n      function unformat(number, allowedSeparators) {\n        allowedSeparators = allowedSeparators || [];\n        if (options.allowedSeparators) {\n          options.allowedSeparators.forEach(function(s) {\n            allowedSeparators.push(s);\n          });\n        }\n        allowedSeparators.push(options.integerSeparator);\n        allowedSeparators.push(options.decimalsSeparator);\n        number = number.replace(options.prefix, \"\");\n        number = number.replace(options.suffix, \"\");\n        var newNumber = number;\n        do {\n          number = newNumber;\n          for (var i = 0; i < allowedSeparators.length; i++) {\n            newNumber = newNumber.replace(allowedSeparators[i], \"\");\n          }\n        } while (newNumber != number);\n        return number;\n      }\n      format4.unformat = unformat;\n      function validate(number, allowedSeparators) {\n        number = unformat(number, allowedSeparators);\n        number = number.split(options.decimal);\n        if (number.length > 2) {\n          return false;\n        } else if (options.truncate != null && number[1] && number[1].length > options.truncate) {\n          return false;\n        } else if (options.round != null && number[1] && number[1].length > options.round) {\n          return false;\n        } else {\n          return /^-?\\d+\\.?\\d*$/.test(number);\n        }\n      }\n      return format4;\n    }\n    function addIntegerSeparators(x, separator) {\n      x += \"\";\n      if (!separator)\n        return x;\n      var rgx = /(\\d+)(\\d{3})/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function addDecimalSeparators(x, separator) {\n      x += \"\";\n      if (!separator)\n        return x;\n      var rgx = /(\\d{3})(\\d+)/;\n      while (rgx.test(x)) {\n        x = x.replace(rgx, \"$1\" + separator + \"$2\");\n      }\n      return x;\n    }\n    function padLeft(x, padding) {\n      x = x + \"\";\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return buf.join(\"\") + x;\n    }\n    function padRight(x, padding) {\n      if (x) {\n        x += \"\";\n      } else {\n        x = \"\";\n      }\n      var buf = [];\n      while (buf.length + x.length < padding) {\n        buf.push(\"0\");\n      }\n      return x + buf.join(\"\");\n    }\n    function truncate(x, length) {\n      if (x) {\n        x += \"\";\n      }\n      if (x && x.length > length) {\n        return x.substr(0, length);\n      } else {\n        return x;\n      }\n    }\n    function round(number, places) {\n      if (number[1] && places >= 0 && number[1].length > places) {\n        var decim = number[1].slice(0, places);\n        if (+number[1].substr(places, 1) >= 5) {\n          var leadingzeros = \"\";\n          while (decim.charAt(0) === \"0\") {\n            leadingzeros = leadingzeros + \"0\";\n            decim = decim.substr(1);\n          }\n          decim = +decim + 1 + \"\";\n          decim = leadingzeros + decim;\n          if (decim.length > places) {\n            number[0] = +number[0] + +decim.charAt(0) + \"\";\n            decim = decim.substring(1);\n          }\n        }\n        number[1] = decim;\n      }\n      return number;\n    }\n  }\n});\n\n// ../../node_modules/date-fns/_lib/requiredArgs/index.js\nvar require_requiredArgs = __commonJS({\n  \"../../node_modules/date-fns/_lib/requiredArgs/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = requiredArgs;\n    function requiredArgs(required, args) {\n      if (args.length < required) {\n        throw new TypeError(required + \" argument\" + (required > 1 ? \"s\" : \"\") + \" required, but only \" + args.length + \" present\");\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isDate/index.js\nvar require_isDate = __commonJS({\n  \"../../node_modules/date-fns/isDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isDate;\n    var _index = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isDate(value) {\n      (0, _index.default)(1, arguments);\n      return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/toDate/index.js\nvar require_toDate = __commonJS({\n  \"../../node_modules/date-fns/toDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = toDate;\n    var _index = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function toDate(argument) {\n      (0, _index.default)(1, arguments);\n      var argStr = Object.prototype.toString.call(argument);\n      if (argument instanceof Date || typeof argument === \"object\" && argStr === \"[object Date]\") {\n        return new Date(argument.getTime());\n      } else if (typeof argument === \"number\" || argStr === \"[object Number]\") {\n        return new Date(argument);\n      } else {\n        if ((typeof argument === \"string\" || argStr === \"[object String]\") && typeof console !== \"undefined\") {\n          console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\");\n          console.warn(new Error().stack);\n        }\n        return new Date(NaN);\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isValid/index.js\nvar require_isValid = __commonJS({\n  \"../../node_modules/date-fns/isValid/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isValid;\n    var _index = _interopRequireDefault(require_isDate());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isValid(dirtyDate) {\n      (0, _index3.default)(1, arguments);\n      if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== \"number\") {\n        return false;\n      }\n      var date = (0, _index2.default)(dirtyDate);\n      return !isNaN(Number(date));\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js\nvar require_formatDistance = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatDistance/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var formatDistanceLocale = {\n      lessThanXSeconds: {\n        one: \"less than a second\",\n        other: \"less than {{count}} seconds\"\n      },\n      xSeconds: {\n        one: \"1 second\",\n        other: \"{{count}} seconds\"\n      },\n      halfAMinute: \"half a minute\",\n      lessThanXMinutes: {\n        one: \"less than a minute\",\n        other: \"less than {{count}} minutes\"\n      },\n      xMinutes: {\n        one: \"1 minute\",\n        other: \"{{count}} minutes\"\n      },\n      aboutXHours: {\n        one: \"about 1 hour\",\n        other: \"about {{count}} hours\"\n      },\n      xHours: {\n        one: \"1 hour\",\n        other: \"{{count}} hours\"\n      },\n      xDays: {\n        one: \"1 day\",\n        other: \"{{count}} days\"\n      },\n      aboutXWeeks: {\n        one: \"about 1 week\",\n        other: \"about {{count}} weeks\"\n      },\n      xWeeks: {\n        one: \"1 week\",\n        other: \"{{count}} weeks\"\n      },\n      aboutXMonths: {\n        one: \"about 1 month\",\n        other: \"about {{count}} months\"\n      },\n      xMonths: {\n        one: \"1 month\",\n        other: \"{{count}} months\"\n      },\n      aboutXYears: {\n        one: \"about 1 year\",\n        other: \"about {{count}} years\"\n      },\n      xYears: {\n        one: \"1 year\",\n        other: \"{{count}} years\"\n      },\n      overXYears: {\n        one: \"over 1 year\",\n        other: \"over {{count}} years\"\n      },\n      almostXYears: {\n        one: \"almost 1 year\",\n        other: \"almost {{count}} years\"\n      }\n    };\n    var formatDistance = function(token, count, options) {\n      var result;\n      var tokenValue = formatDistanceLocale[token];\n      if (typeof tokenValue === \"string\") {\n        result = tokenValue;\n      } else if (count === 1) {\n        result = tokenValue.one;\n      } else {\n        result = tokenValue.other.replace(\"{{count}}\", count.toString());\n      }\n      if (options !== null && options !== void 0 && options.addSuffix) {\n        if (options.comparison && options.comparison > 0) {\n          return \"in \" + result;\n        } else {\n          return result + \" ago\";\n        }\n      }\n      return result;\n    };\n    var _default = formatDistance;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js\nvar require_buildFormatLongFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildFormatLongFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildFormatLongFn;\n    function buildFormatLongFn(args) {\n      return function() {\n        var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        var width = options.width ? String(options.width) : args.defaultWidth;\n        var format4 = args.formats[width] || args.formats[args.defaultWidth];\n        return format4;\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js\nvar require_formatLong = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatLong/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildFormatLongFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var dateFormats = {\n      full: \"EEEE, MMMM do, y\",\n      long: \"MMMM do, y\",\n      medium: \"MMM d, y\",\n      short: \"MM/dd/yyyy\"\n    };\n    var timeFormats = {\n      full: \"h:mm:ss a zzzz\",\n      long: \"h:mm:ss a z\",\n      medium: \"h:mm:ss a\",\n      short: \"h:mm a\"\n    };\n    var dateTimeFormats = {\n      full: \"{{date}} 'at' {{time}}\",\n      long: \"{{date}} 'at' {{time}}\",\n      medium: \"{{date}}, {{time}}\",\n      short: \"{{date}}, {{time}}\"\n    };\n    var formatLong = {\n      date: (0, _index.default)({\n        formats: dateFormats,\n        defaultWidth: \"full\"\n      }),\n      time: (0, _index.default)({\n        formats: timeFormats,\n        defaultWidth: \"full\"\n      }),\n      dateTime: (0, _index.default)({\n        formats: dateTimeFormats,\n        defaultWidth: \"full\"\n      })\n    };\n    var _default = formatLong;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js\nvar require_formatRelative = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/formatRelative/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var formatRelativeLocale = {\n      lastWeek: \"'last' eeee 'at' p\",\n      yesterday: \"'yesterday at' p\",\n      today: \"'today at' p\",\n      tomorrow: \"'tomorrow at' p\",\n      nextWeek: \"eeee 'at' p\",\n      other: \"P\"\n    };\n    var formatRelative = function(token, _date, _baseDate, _options) {\n      return formatRelativeLocale[token];\n    };\n    var _default = formatRelative;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js\nvar require_buildLocalizeFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildLocalizeFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildLocalizeFn;\n    function buildLocalizeFn(args) {\n      return function(dirtyIndex, dirtyOptions) {\n        var options = dirtyOptions || {};\n        var context = options.context ? String(options.context) : \"standalone\";\n        var valuesArray;\n        if (context === \"formatting\" && args.formattingValues) {\n          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n          var width = options.width ? String(options.width) : defaultWidth;\n          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n        } else {\n          var _defaultWidth = args.defaultWidth;\n          var _width = options.width ? String(options.width) : args.defaultWidth;\n          valuesArray = args.values[_width] || args.values[_defaultWidth];\n        }\n        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n        return valuesArray[index];\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/localize/index.js\nvar require_localize = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/localize/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildLocalizeFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var eraValues = {\n      narrow: [\"B\", \"A\"],\n      abbreviated: [\"BC\", \"AD\"],\n      wide: [\"Before Christ\", \"Anno Domini\"]\n    };\n    var quarterValues = {\n      narrow: [\"1\", \"2\", \"3\", \"4\"],\n      abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n      wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n    };\n    var monthValues = {\n      narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n      abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    };\n    var dayValues = {\n      narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n      short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n      abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    };\n    var dayPeriodValues = {\n      narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      },\n      abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      },\n      wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"morning\",\n        afternoon: \"afternoon\",\n        evening: \"evening\",\n        night: \"night\"\n      }\n    };\n    var formattingDayPeriodValues = {\n      narrow: {\n        am: \"a\",\n        pm: \"p\",\n        midnight: \"mi\",\n        noon: \"n\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      },\n      abbreviated: {\n        am: \"AM\",\n        pm: \"PM\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      },\n      wide: {\n        am: \"a.m.\",\n        pm: \"p.m.\",\n        midnight: \"midnight\",\n        noon: \"noon\",\n        morning: \"in the morning\",\n        afternoon: \"in the afternoon\",\n        evening: \"in the evening\",\n        night: \"at night\"\n      }\n    };\n    var ordinalNumber = function(dirtyNumber, _options) {\n      var number = Number(dirtyNumber);\n      var rem100 = number % 100;\n      if (rem100 > 20 || rem100 < 10) {\n        switch (rem100 % 10) {\n          case 1:\n            return number + \"st\";\n          case 2:\n            return number + \"nd\";\n          case 3:\n            return number + \"rd\";\n        }\n      }\n      return number + \"th\";\n    };\n    var localize = {\n      ordinalNumber,\n      era: (0, _index.default)({\n        values: eraValues,\n        defaultWidth: \"wide\"\n      }),\n      quarter: (0, _index.default)({\n        values: quarterValues,\n        defaultWidth: \"wide\",\n        argumentCallback: function(quarter) {\n          return quarter - 1;\n        }\n      }),\n      month: (0, _index.default)({\n        values: monthValues,\n        defaultWidth: \"wide\"\n      }),\n      day: (0, _index.default)({\n        values: dayValues,\n        defaultWidth: \"wide\"\n      }),\n      dayPeriod: (0, _index.default)({\n        values: dayPeriodValues,\n        defaultWidth: \"wide\",\n        formattingValues: formattingDayPeriodValues,\n        defaultFormattingWidth: \"wide\"\n      })\n    };\n    var _default = localize;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js\nvar require_buildMatchFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildMatchFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildMatchFn;\n    function buildMatchFn(args) {\n      return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var width = options.width;\n        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n        var matchResult = string.match(matchPattern);\n        if (!matchResult) {\n          return null;\n        }\n        var matchedString = matchResult[0];\n        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {\n          return pattern.test(matchedString);\n        }) : findKey(parsePatterns, function(pattern) {\n          return pattern.test(matchedString);\n        });\n        var value;\n        value = args.valueCallback ? args.valueCallback(key) : key;\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n          value,\n          rest\n        };\n      };\n    }\n    function findKey(object, predicate) {\n      for (var key in object) {\n        if (object.hasOwnProperty(key) && predicate(object[key])) {\n          return key;\n        }\n      }\n      return void 0;\n    }\n    function findIndex(array, predicate) {\n      for (var key = 0; key < array.length; key++) {\n        if (predicate(array[key])) {\n          return key;\n        }\n      }\n      return void 0;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js\nvar require_buildMatchPatternFn = __commonJS({\n  \"../../node_modules/date-fns/locale/_lib/buildMatchPatternFn/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = buildMatchPatternFn;\n    function buildMatchPatternFn(args) {\n      return function(string) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var matchResult = string.match(args.matchPattern);\n        if (!matchResult)\n          return null;\n        var matchedString = matchResult[0];\n        var parseResult = string.match(args.parsePattern);\n        if (!parseResult)\n          return null;\n        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n        value = options.valueCallback ? options.valueCallback(value) : value;\n        var rest = string.slice(matchedString.length);\n        return {\n          value,\n          rest\n        };\n      };\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/_lib/match/index.js\nvar require_match = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/_lib/match/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_buildMatchFn());\n    var _index2 = _interopRequireDefault(require_buildMatchPatternFn());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\n    var parseOrdinalNumberPattern = /\\d+/i;\n    var matchEraPatterns = {\n      narrow: /^(b|a)/i,\n      abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n      wide: /^(before christ|before common era|anno domini|common era)/i\n    };\n    var parseEraPatterns = {\n      any: [/^b/i, /^(a|c)/i]\n    };\n    var matchQuarterPatterns = {\n      narrow: /^[1234]/i,\n      abbreviated: /^q[1234]/i,\n      wide: /^[1234](th|st|nd|rd)? quarter/i\n    };\n    var parseQuarterPatterns = {\n      any: [/1/i, /2/i, /3/i, /4/i]\n    };\n    var matchMonthPatterns = {\n      narrow: /^[jfmasond]/i,\n      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n    };\n    var parseMonthPatterns = {\n      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n    };\n    var matchDayPatterns = {\n      narrow: /^[smtwf]/i,\n      short: /^(su|mo|tu|we|th|fr|sa)/i,\n      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n    };\n    var parseDayPatterns = {\n      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n    };\n    var matchDayPeriodPatterns = {\n      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n      any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n    };\n    var parseDayPeriodPatterns = {\n      any: {\n        am: /^a/i,\n        pm: /^p/i,\n        midnight: /^mi/i,\n        noon: /^no/i,\n        morning: /morning/i,\n        afternoon: /afternoon/i,\n        evening: /evening/i,\n        night: /night/i\n      }\n    };\n    var match = {\n      ordinalNumber: (0, _index2.default)({\n        matchPattern: matchOrdinalNumberPattern,\n        parsePattern: parseOrdinalNumberPattern,\n        valueCallback: function(value) {\n          return parseInt(value, 10);\n        }\n      }),\n      era: (0, _index.default)({\n        matchPatterns: matchEraPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseEraPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      quarter: (0, _index.default)({\n        matchPatterns: matchQuarterPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseQuarterPatterns,\n        defaultParseWidth: \"any\",\n        valueCallback: function(index) {\n          return index + 1;\n        }\n      }),\n      month: (0, _index.default)({\n        matchPatterns: matchMonthPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseMonthPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      day: (0, _index.default)({\n        matchPatterns: matchDayPatterns,\n        defaultMatchWidth: \"wide\",\n        parsePatterns: parseDayPatterns,\n        defaultParseWidth: \"any\"\n      }),\n      dayPeriod: (0, _index.default)({\n        matchPatterns: matchDayPeriodPatterns,\n        defaultMatchWidth: \"any\",\n        parsePatterns: parseDayPeriodPatterns,\n        defaultParseWidth: \"any\"\n      })\n    };\n    var _default = match;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/locale/en-US/index.js\nvar require_en_US = __commonJS({\n  \"../../node_modules/date-fns/locale/en-US/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_formatDistance());\n    var _index2 = _interopRequireDefault(require_formatLong());\n    var _index3 = _interopRequireDefault(require_formatRelative());\n    var _index4 = _interopRequireDefault(require_localize());\n    var _index5 = _interopRequireDefault(require_match());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var locale = {\n      code: \"en-US\",\n      formatDistance: _index.default,\n      formatLong: _index2.default,\n      formatRelative: _index3.default,\n      localize: _index4.default,\n      match: _index5.default,\n      options: {\n        weekStartsOn: 0,\n        firstWeekContainsDate: 1\n      }\n    };\n    var _default = locale;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/toInteger/index.js\nvar require_toInteger = __commonJS({\n  \"../../node_modules/date-fns/_lib/toInteger/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = toInteger;\n    function toInteger(dirtyNumber) {\n      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n        return NaN;\n      }\n      var number = Number(dirtyNumber);\n      if (isNaN(number)) {\n        return number;\n      }\n      return number < 0 ? Math.ceil(number) : Math.floor(number);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addMilliseconds/index.js\nvar require_addMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/addMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addMilliseconds;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addMilliseconds(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var timestamp = (0, _index2.default)(dirtyDate).getTime();\n      var amount = (0, _index.default)(dirtyAmount);\n      return new Date(timestamp + amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subMilliseconds/index.js\nvar require_subMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/subMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subMilliseconds;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subMilliseconds(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js\nvar require_getUTCDayOfYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCDayOfYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCDayOfYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_DAY = 864e5;\n    function getUTCDayOfYear(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var timestamp = date.getTime();\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      var startOfYearTimestamp = date.getTime();\n      var difference = timestamp - startOfYearTimestamp;\n      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js\nvar require_startOfUTCISOWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCISOWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCISOWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCISOWeek(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var weekStartsOn = 1;\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getUTCDay();\n      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n      date.setUTCDate(date.getUTCDate() - diff);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js\nvar require_getUTCISOWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCISOWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCISOWeekYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCISOWeek());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getUTCISOWeekYear(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var year = date.getUTCFullYear();\n      var fourthOfJanuaryOfNextYear = new Date(0);\n      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n      var startOfNextYear = (0, _index3.default)(fourthOfJanuaryOfNextYear);\n      var fourthOfJanuaryOfThisYear = new Date(0);\n      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n      var startOfThisYear = (0, _index3.default)(fourthOfJanuaryOfThisYear);\n      if (date.getTime() >= startOfNextYear.getTime()) {\n        return year + 1;\n      } else if (date.getTime() >= startOfThisYear.getTime()) {\n        return year;\n      } else {\n        return year - 1;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js\nvar require_startOfUTCISOWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCISOWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCISOWeekYear;\n    var _index = _interopRequireDefault(require_getUTCISOWeekYear());\n    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCISOWeekYear(dirtyDate) {\n      (0, _index3.default)(1, arguments);\n      var year = (0, _index.default)(dirtyDate);\n      var fourthOfJanuary = new Date(0);\n      fourthOfJanuary.setUTCFullYear(year, 0, 4);\n      fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n      var date = (0, _index2.default)(fourthOfJanuary);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCISOWeek/index.js\nvar require_getUTCISOWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCISOWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCISOWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_startOfUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_startOfUTCISOWeekYear());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_WEEK = 6048e5;\n    function getUTCISOWeek(dirtyDate) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var diff = (0, _index2.default)(date).getTime() - (0, _index3.default)(date).getTime();\n      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCWeek/index.js\nvar require_startOfUTCWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCWeek(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index3.default)(localeWeekStartsOn);\n      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index3.default)(options.weekStartsOn);\n      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n        throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");\n      }\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getUTCDay();\n      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n      date.setUTCDate(date.getUTCDate() - diff);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCWeekYear/index.js\nvar require_getUTCWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCWeekYear;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getUTCWeekYear(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var year = date.getUTCFullYear();\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);\n      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n        throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");\n      }\n      var firstWeekOfNextYear = new Date(0);\n      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n      var startOfNextYear = (0, _index3.default)(firstWeekOfNextYear, dirtyOptions);\n      var firstWeekOfThisYear = new Date(0);\n      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n      var startOfThisYear = (0, _index3.default)(firstWeekOfThisYear, dirtyOptions);\n      if (date.getTime() >= startOfNextYear.getTime()) {\n        return year + 1;\n      } else if (date.getTime() >= startOfThisYear.getTime()) {\n        return year;\n      } else {\n        return year - 1;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js\nvar require_startOfUTCWeekYear = __commonJS({\n  \"../../node_modules/date-fns/_lib/startOfUTCWeekYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfUTCWeekYear;\n    var _index = _interopRequireDefault(require_getUTCWeekYear());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n      (0, _index2.default)(1, arguments);\n      var options = dirtyOptions || {};\n      var locale = options.locale;\n      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index4.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index4.default)(options.firstWeekContainsDate);\n      var year = (0, _index.default)(dirtyDate, dirtyOptions);\n      var firstWeek = new Date(0);\n      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n      firstWeek.setUTCHours(0, 0, 0, 0);\n      var date = (0, _index3.default)(firstWeek, dirtyOptions);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getUTCWeek/index.js\nvar require_getUTCWeek = __commonJS({\n  \"../../node_modules/date-fns/_lib/getUTCWeek/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getUTCWeek;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_startOfUTCWeek());\n    var _index3 = _interopRequireDefault(require_startOfUTCWeekYear());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_WEEK = 6048e5;\n    function getUTCWeek(dirtyDate, options) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var diff = (0, _index2.default)(date, options).getTime() - (0, _index3.default)(date, options).getTime();\n      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/addLeadingZeros/index.js\nvar require_addLeadingZeros = __commonJS({\n  \"../../node_modules/date-fns/_lib/addLeadingZeros/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addLeadingZeros;\n    function addLeadingZeros(number, targetLength) {\n      var sign = number < 0 ? \"-\" : \"\";\n      var output = Math.abs(number).toString();\n      while (output.length < targetLength) {\n        output = \"0\" + output;\n      }\n      return sign + output;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/lightFormatters/index.js\nvar require_lightFormatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/lightFormatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_addLeadingZeros());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var formatters = {\n      y: function(date, token) {\n        var signedYear = date.getUTCFullYear();\n        var year = signedYear > 0 ? signedYear : 1 - signedYear;\n        return (0, _index.default)(token === \"yy\" ? year % 100 : year, token.length);\n      },\n      M: function(date, token) {\n        var month = date.getUTCMonth();\n        return token === \"M\" ? String(month + 1) : (0, _index.default)(month + 1, 2);\n      },\n      d: function(date, token) {\n        return (0, _index.default)(date.getUTCDate(), token.length);\n      },\n      a: function(date, token) {\n        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? \"pm\" : \"am\";\n        switch (token) {\n          case \"a\":\n          case \"aa\":\n            return dayPeriodEnumValue.toUpperCase();\n          case \"aaa\":\n            return dayPeriodEnumValue;\n          case \"aaaaa\":\n            return dayPeriodEnumValue[0];\n          case \"aaaa\":\n          default:\n            return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n        }\n      },\n      h: function(date, token) {\n        return (0, _index.default)(date.getUTCHours() % 12 || 12, token.length);\n      },\n      H: function(date, token) {\n        return (0, _index.default)(date.getUTCHours(), token.length);\n      },\n      m: function(date, token) {\n        return (0, _index.default)(date.getUTCMinutes(), token.length);\n      },\n      s: function(date, token) {\n        return (0, _index.default)(date.getUTCSeconds(), token.length);\n      },\n      S: function(date, token) {\n        var numberOfDigits = token.length;\n        var milliseconds = date.getUTCMilliseconds();\n        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n        return (0, _index.default)(fractionalSeconds, token.length);\n      }\n    };\n    var _default = formatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/formatters/index.js\nvar require_formatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/formatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    var _index = _interopRequireDefault(require_getUTCDayOfYear());\n    var _index2 = _interopRequireDefault(require_getUTCISOWeek());\n    var _index3 = _interopRequireDefault(require_getUTCISOWeekYear());\n    var _index4 = _interopRequireDefault(require_getUTCWeek());\n    var _index5 = _interopRequireDefault(require_getUTCWeekYear());\n    var _index6 = _interopRequireDefault(require_addLeadingZeros());\n    var _index7 = _interopRequireDefault(require_lightFormatters());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var dayPeriodEnum = {\n      am: \"am\",\n      pm: \"pm\",\n      midnight: \"midnight\",\n      noon: \"noon\",\n      morning: \"morning\",\n      afternoon: \"afternoon\",\n      evening: \"evening\",\n      night: \"night\"\n    };\n    var formatters = {\n      G: function(date, token, localize) {\n        var era = date.getUTCFullYear() > 0 ? 1 : 0;\n        switch (token) {\n          case \"G\":\n          case \"GG\":\n          case \"GGG\":\n            return localize.era(era, {\n              width: \"abbreviated\"\n            });\n          case \"GGGGG\":\n            return localize.era(era, {\n              width: \"narrow\"\n            });\n          case \"GGGG\":\n          default:\n            return localize.era(era, {\n              width: \"wide\"\n            });\n        }\n      },\n      y: function(date, token, localize) {\n        if (token === \"yo\") {\n          var signedYear = date.getUTCFullYear();\n          var year = signedYear > 0 ? signedYear : 1 - signedYear;\n          return localize.ordinalNumber(year, {\n            unit: \"year\"\n          });\n        }\n        return _index7.default.y(date, token);\n      },\n      Y: function(date, token, localize, options) {\n        var signedWeekYear = (0, _index5.default)(date, options);\n        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n        if (token === \"YY\") {\n          var twoDigitYear = weekYear % 100;\n          return (0, _index6.default)(twoDigitYear, 2);\n        }\n        if (token === \"Yo\") {\n          return localize.ordinalNumber(weekYear, {\n            unit: \"year\"\n          });\n        }\n        return (0, _index6.default)(weekYear, token.length);\n      },\n      R: function(date, token) {\n        var isoWeekYear = (0, _index3.default)(date);\n        return (0, _index6.default)(isoWeekYear, token.length);\n      },\n      u: function(date, token) {\n        var year = date.getUTCFullYear();\n        return (0, _index6.default)(year, token.length);\n      },\n      Q: function(date, token, localize) {\n        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n        switch (token) {\n          case \"Q\":\n            return String(quarter);\n          case \"QQ\":\n            return (0, _index6.default)(quarter, 2);\n          case \"Qo\":\n            return localize.ordinalNumber(quarter, {\n              unit: \"quarter\"\n            });\n          case \"QQQ\":\n            return localize.quarter(quarter, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"QQQQQ\":\n            return localize.quarter(quarter, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"QQQQ\":\n          default:\n            return localize.quarter(quarter, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      q: function(date, token, localize) {\n        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n        switch (token) {\n          case \"q\":\n            return String(quarter);\n          case \"qq\":\n            return (0, _index6.default)(quarter, 2);\n          case \"qo\":\n            return localize.ordinalNumber(quarter, {\n              unit: \"quarter\"\n            });\n          case \"qqq\":\n            return localize.quarter(quarter, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"qqqqq\":\n            return localize.quarter(quarter, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"qqqq\":\n          default:\n            return localize.quarter(quarter, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      M: function(date, token, localize) {\n        var month = date.getUTCMonth();\n        switch (token) {\n          case \"M\":\n          case \"MM\":\n            return _index7.default.M(date, token);\n          case \"Mo\":\n            return localize.ordinalNumber(month + 1, {\n              unit: \"month\"\n            });\n          case \"MMM\":\n            return localize.month(month, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"MMMMM\":\n            return localize.month(month, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"MMMM\":\n          default:\n            return localize.month(month, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      L: function(date, token, localize) {\n        var month = date.getUTCMonth();\n        switch (token) {\n          case \"L\":\n            return String(month + 1);\n          case \"LL\":\n            return (0, _index6.default)(month + 1, 2);\n          case \"Lo\":\n            return localize.ordinalNumber(month + 1, {\n              unit: \"month\"\n            });\n          case \"LLL\":\n            return localize.month(month, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"LLLLL\":\n            return localize.month(month, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"LLLL\":\n          default:\n            return localize.month(month, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      w: function(date, token, localize, options) {\n        var week = (0, _index4.default)(date, options);\n        if (token === \"wo\") {\n          return localize.ordinalNumber(week, {\n            unit: \"week\"\n          });\n        }\n        return (0, _index6.default)(week, token.length);\n      },\n      I: function(date, token, localize) {\n        var isoWeek = (0, _index2.default)(date);\n        if (token === \"Io\") {\n          return localize.ordinalNumber(isoWeek, {\n            unit: \"week\"\n          });\n        }\n        return (0, _index6.default)(isoWeek, token.length);\n      },\n      d: function(date, token, localize) {\n        if (token === \"do\") {\n          return localize.ordinalNumber(date.getUTCDate(), {\n            unit: \"date\"\n          });\n        }\n        return _index7.default.d(date, token);\n      },\n      D: function(date, token, localize) {\n        var dayOfYear = (0, _index.default)(date);\n        if (token === \"Do\") {\n          return localize.ordinalNumber(dayOfYear, {\n            unit: \"dayOfYear\"\n          });\n        }\n        return (0, _index6.default)(dayOfYear, token.length);\n      },\n      E: function(date, token, localize) {\n        var dayOfWeek = date.getUTCDay();\n        switch (token) {\n          case \"E\":\n          case \"EE\":\n          case \"EEE\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"EEEEE\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"EEEEEE\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"EEEE\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      e: function(date, token, localize, options) {\n        var dayOfWeek = date.getUTCDay();\n        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n        switch (token) {\n          case \"e\":\n            return String(localDayOfWeek);\n          case \"ee\":\n            return (0, _index6.default)(localDayOfWeek, 2);\n          case \"eo\":\n            return localize.ordinalNumber(localDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"eee\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"eeeee\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"eeeeee\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"eeee\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      c: function(date, token, localize, options) {\n        var dayOfWeek = date.getUTCDay();\n        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n        switch (token) {\n          case \"c\":\n            return String(localDayOfWeek);\n          case \"cc\":\n            return (0, _index6.default)(localDayOfWeek, token.length);\n          case \"co\":\n            return localize.ordinalNumber(localDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"ccc\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"standalone\"\n            });\n          case \"ccccc\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"standalone\"\n            });\n          case \"cccccc\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"standalone\"\n            });\n          case \"cccc\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"standalone\"\n            });\n        }\n      },\n      i: function(date, token, localize) {\n        var dayOfWeek = date.getUTCDay();\n        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n        switch (token) {\n          case \"i\":\n            return String(isoDayOfWeek);\n          case \"ii\":\n            return (0, _index6.default)(isoDayOfWeek, token.length);\n          case \"io\":\n            return localize.ordinalNumber(isoDayOfWeek, {\n              unit: \"day\"\n            });\n          case \"iii\":\n            return localize.day(dayOfWeek, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"iiiii\":\n            return localize.day(dayOfWeek, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"iiiiii\":\n            return localize.day(dayOfWeek, {\n              width: \"short\",\n              context: \"formatting\"\n            });\n          case \"iiii\":\n          default:\n            return localize.day(dayOfWeek, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      a: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n        switch (token) {\n          case \"a\":\n          case \"aa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"aaa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }).toLowerCase();\n          case \"aaaaa\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"aaaa\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      b: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue;\n        if (hours === 12) {\n          dayPeriodEnumValue = dayPeriodEnum.noon;\n        } else if (hours === 0) {\n          dayPeriodEnumValue = dayPeriodEnum.midnight;\n        } else {\n          dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n        }\n        switch (token) {\n          case \"b\":\n          case \"bb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"bbb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            }).toLowerCase();\n          case \"bbbbb\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"bbbb\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      B: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        var dayPeriodEnumValue;\n        if (hours >= 17) {\n          dayPeriodEnumValue = dayPeriodEnum.evening;\n        } else if (hours >= 12) {\n          dayPeriodEnumValue = dayPeriodEnum.afternoon;\n        } else if (hours >= 4) {\n          dayPeriodEnumValue = dayPeriodEnum.morning;\n        } else {\n          dayPeriodEnumValue = dayPeriodEnum.night;\n        }\n        switch (token) {\n          case \"B\":\n          case \"BB\":\n          case \"BBB\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"abbreviated\",\n              context: \"formatting\"\n            });\n          case \"BBBBB\":\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"narrow\",\n              context: \"formatting\"\n            });\n          case \"BBBB\":\n          default:\n            return localize.dayPeriod(dayPeriodEnumValue, {\n              width: \"wide\",\n              context: \"formatting\"\n            });\n        }\n      },\n      h: function(date, token, localize) {\n        if (token === \"ho\") {\n          var hours = date.getUTCHours() % 12;\n          if (hours === 0)\n            hours = 12;\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return _index7.default.h(date, token);\n      },\n      H: function(date, token, localize) {\n        if (token === \"Ho\") {\n          return localize.ordinalNumber(date.getUTCHours(), {\n            unit: \"hour\"\n          });\n        }\n        return _index7.default.H(date, token);\n      },\n      K: function(date, token, localize) {\n        var hours = date.getUTCHours() % 12;\n        if (token === \"Ko\") {\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return (0, _index6.default)(hours, token.length);\n      },\n      k: function(date, token, localize) {\n        var hours = date.getUTCHours();\n        if (hours === 0)\n          hours = 24;\n        if (token === \"ko\") {\n          return localize.ordinalNumber(hours, {\n            unit: \"hour\"\n          });\n        }\n        return (0, _index6.default)(hours, token.length);\n      },\n      m: function(date, token, localize) {\n        if (token === \"mo\") {\n          return localize.ordinalNumber(date.getUTCMinutes(), {\n            unit: \"minute\"\n          });\n        }\n        return _index7.default.m(date, token);\n      },\n      s: function(date, token, localize) {\n        if (token === \"so\") {\n          return localize.ordinalNumber(date.getUTCSeconds(), {\n            unit: \"second\"\n          });\n        }\n        return _index7.default.s(date, token);\n      },\n      S: function(date, token) {\n        return _index7.default.S(date, token);\n      },\n      X: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        if (timezoneOffset === 0) {\n          return \"Z\";\n        }\n        switch (token) {\n          case \"X\":\n            return formatTimezoneWithOptionalMinutes(timezoneOffset);\n          case \"XXXX\":\n          case \"XX\":\n            return formatTimezone(timezoneOffset);\n          case \"XXXXX\":\n          case \"XXX\":\n          default:\n            return formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      x: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"x\":\n            return formatTimezoneWithOptionalMinutes(timezoneOffset);\n          case \"xxxx\":\n          case \"xx\":\n            return formatTimezone(timezoneOffset);\n          case \"xxxxx\":\n          case \"xxx\":\n          default:\n            return formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      O: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"O\":\n          case \"OO\":\n          case \"OOO\":\n            return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n          case \"OOOO\":\n          default:\n            return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      z: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timezoneOffset = originalDate.getTimezoneOffset();\n        switch (token) {\n          case \"z\":\n          case \"zz\":\n          case \"zzz\":\n            return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n          case \"zzzz\":\n          default:\n            return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n        }\n      },\n      t: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timestamp = Math.floor(originalDate.getTime() / 1e3);\n        return (0, _index6.default)(timestamp, token.length);\n      },\n      T: function(date, token, _localize, options) {\n        var originalDate = options._originalDate || date;\n        var timestamp = originalDate.getTime();\n        return (0, _index6.default)(timestamp, token.length);\n      }\n    };\n    function formatTimezoneShort(offset, dirtyDelimiter) {\n      var sign = offset > 0 ? \"-\" : \"+\";\n      var absOffset = Math.abs(offset);\n      var hours = Math.floor(absOffset / 60);\n      var minutes = absOffset % 60;\n      if (minutes === 0) {\n        return sign + String(hours);\n      }\n      var delimiter = dirtyDelimiter || \"\";\n      return sign + String(hours) + delimiter + (0, _index6.default)(minutes, 2);\n    }\n    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n      if (offset % 60 === 0) {\n        var sign = offset > 0 ? \"-\" : \"+\";\n        return sign + (0, _index6.default)(Math.abs(offset) / 60, 2);\n      }\n      return formatTimezone(offset, dirtyDelimiter);\n    }\n    function formatTimezone(offset, dirtyDelimiter) {\n      var delimiter = dirtyDelimiter || \"\";\n      var sign = offset > 0 ? \"-\" : \"+\";\n      var absOffset = Math.abs(offset);\n      var hours = (0, _index6.default)(Math.floor(absOffset / 60), 2);\n      var minutes = (0, _index6.default)(absOffset % 60, 2);\n      return sign + hours + delimiter + minutes;\n    }\n    var _default = formatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/format/longFormatters/index.js\nvar require_longFormatters = __commonJS({\n  \"../../node_modules/date-fns/_lib/format/longFormatters/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = void 0;\n    function dateLongFormatter(pattern, formatLong) {\n      switch (pattern) {\n        case \"P\":\n          return formatLong.date({\n            width: \"short\"\n          });\n        case \"PP\":\n          return formatLong.date({\n            width: \"medium\"\n          });\n        case \"PPP\":\n          return formatLong.date({\n            width: \"long\"\n          });\n        case \"PPPP\":\n        default:\n          return formatLong.date({\n            width: \"full\"\n          });\n      }\n    }\n    function timeLongFormatter(pattern, formatLong) {\n      switch (pattern) {\n        case \"p\":\n          return formatLong.time({\n            width: \"short\"\n          });\n        case \"pp\":\n          return formatLong.time({\n            width: \"medium\"\n          });\n        case \"ppp\":\n          return formatLong.time({\n            width: \"long\"\n          });\n        case \"pppp\":\n        default:\n          return formatLong.time({\n            width: \"full\"\n          });\n      }\n    }\n    function dateTimeLongFormatter(pattern, formatLong) {\n      var matchResult = pattern.match(/(P+)(p+)?/) || [];\n      var datePattern = matchResult[1];\n      var timePattern = matchResult[2];\n      if (!timePattern) {\n        return dateLongFormatter(pattern, formatLong);\n      }\n      var dateTimeFormat;\n      switch (datePattern) {\n        case \"P\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"short\"\n          });\n          break;\n        case \"PP\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"medium\"\n          });\n          break;\n        case \"PPP\":\n          dateTimeFormat = formatLong.dateTime({\n            width: \"long\"\n          });\n          break;\n        case \"PPPP\":\n        default:\n          dateTimeFormat = formatLong.dateTime({\n            width: \"full\"\n          });\n          break;\n      }\n      return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n    }\n    var longFormatters = {\n      p: timeLongFormatter,\n      P: dateTimeLongFormatter\n    };\n    var _default = longFormatters;\n    exports.default = _default;\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js\nvar require_getTimezoneOffsetInMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getTimezoneOffsetInMilliseconds;\n    function getTimezoneOffsetInMilliseconds(date) {\n      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      utcDate.setUTCFullYear(date.getFullYear());\n      return date.getTime() - utcDate.getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/protectedTokens/index.js\nvar require_protectedTokens = __commonJS({\n  \"../../node_modules/date-fns/_lib/protectedTokens/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.isProtectedDayOfYearToken = isProtectedDayOfYearToken;\n    exports.isProtectedWeekYearToken = isProtectedWeekYearToken;\n    exports.throwProtectedError = throwProtectedError;\n    var protectedDayOfYearTokens = [\"D\", \"DD\"];\n    var protectedWeekYearTokens = [\"YY\", \"YYYY\"];\n    function isProtectedDayOfYearToken(token) {\n      return protectedDayOfYearTokens.indexOf(token) !== -1;\n    }\n    function isProtectedWeekYearToken(token) {\n      return protectedWeekYearTokens.indexOf(token) !== -1;\n    }\n    function throwProtectedError(token, format4, input) {\n      if (token === \"YYYY\") {\n        throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format4, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"YY\") {\n        throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format4, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"D\") {\n        throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format4, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      } else if (token === \"DD\") {\n        throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format4, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n      }\n    }\n  }\n});\n\n// ../../node_modules/date-fns/format/index.js\nvar require_format = __commonJS({\n  \"../../node_modules/date-fns/format/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = format4;\n    var _index = _interopRequireDefault(require_isValid());\n    var _index2 = _interopRequireDefault(require_en_US());\n    var _index3 = _interopRequireDefault(require_subMilliseconds());\n    var _index4 = _interopRequireDefault(require_toDate());\n    var _index5 = _interopRequireDefault(require_formatters());\n    var _index6 = _interopRequireDefault(require_longFormatters());\n    var _index7 = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());\n    var _index8 = require_protectedTokens();\n    var _index9 = _interopRequireDefault(require_toInteger());\n    var _index10 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n    var escapedStringRegExp = /^'([^]*?)'?$/;\n    var doubleQuoteRegExp = /''/g;\n    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n    function format4(dirtyDate, dirtyFormatStr, dirtyOptions) {\n      (0, _index10.default)(2, arguments);\n      var formatStr = String(dirtyFormatStr);\n      var options = dirtyOptions || {};\n      var locale = options.locale || _index2.default;\n      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : (0, _index9.default)(localeFirstWeekContainsDate);\n      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : (0, _index9.default)(options.firstWeekContainsDate);\n      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n        throw new RangeError(\"firstWeekContainsDate must be between 1 and 7 inclusively\");\n      }\n      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0, _index9.default)(localeWeekStartsOn);\n      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0, _index9.default)(options.weekStartsOn);\n      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n        throw new RangeError(\"weekStartsOn must be between 0 and 6 inclusively\");\n      }\n      if (!locale.localize) {\n        throw new RangeError(\"locale must contain localize property\");\n      }\n      if (!locale.formatLong) {\n        throw new RangeError(\"locale must contain formatLong property\");\n      }\n      var originalDate = (0, _index4.default)(dirtyDate);\n      if (!(0, _index.default)(originalDate)) {\n        throw new RangeError(\"Invalid time value\");\n      }\n      var timezoneOffset = (0, _index7.default)(originalDate);\n      var utcDate = (0, _index3.default)(originalDate, timezoneOffset);\n      var formatterOptions = {\n        firstWeekContainsDate,\n        weekStartsOn,\n        locale,\n        _originalDate: originalDate\n      };\n      var result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {\n        var firstCharacter = substring[0];\n        if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n          var longFormatter = _index6.default[firstCharacter];\n          return longFormatter(substring, locale.formatLong, formatterOptions);\n        }\n        return substring;\n      }).join(\"\").match(formattingTokensRegExp).map(function(substring) {\n        if (substring === \"''\") {\n          return \"'\";\n        }\n        var firstCharacter = substring[0];\n        if (firstCharacter === \"'\") {\n          return cleanEscapedString(substring);\n        }\n        var formatter = _index5.default[firstCharacter];\n        if (formatter) {\n          if (!options.useAdditionalWeekYearTokens && (0, _index8.isProtectedWeekYearToken)(substring)) {\n            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);\n          }\n          if (!options.useAdditionalDayOfYearTokens && (0, _index8.isProtectedDayOfYearToken)(substring)) {\n            (0, _index8.throwProtectedError)(substring, dirtyFormatStr, dirtyDate);\n          }\n          return formatter(utcDate, substring, locale.localize, formatterOptions);\n        }\n        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n          throw new RangeError(\"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\");\n        }\n        return substring;\n      }).join(\"\");\n      return result;\n    }\n    function cleanEscapedString(input) {\n      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/lodash.throttle/index.js\nvar require_lodash = __commonJS({\n  \"../../node_modules/lodash.throttle/index.js\"(exports, module) {\n    var FUNC_ERROR_TEXT = \"Expected a function\";\n    var NAN = 0 / 0;\n    var symbolTag = \"[object Symbol]\";\n    var reTrim = /^\\s+|\\s+$/g;\n    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n    var reIsBinary = /^0b[01]+$/i;\n    var reIsOctal = /^0o[0-7]+$/i;\n    var freeParseInt = parseInt;\n    var freeGlobal = typeof global == \"object\" && global && global.Object === Object && global;\n    var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n    var root = freeGlobal || freeSelf || Function(\"return this\")();\n    var objectProto = Object.prototype;\n    var objectToString = objectProto.toString;\n    var nativeMax = Math.max;\n    var nativeMin = Math.min;\n    var now = function() {\n      return root.Date.now();\n    };\n    function debounce(func, wait, options) {\n      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = \"maxWait\" in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      function invokeFunc(time) {\n        var args = lastArgs, thisArg = lastThis;\n        lastArgs = lastThis = void 0;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n      function leadingEdge(time) {\n        lastInvokeTime = time;\n        timerId = setTimeout(timerExpired, wait);\n        return leading ? invokeFunc(time) : result;\n      }\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;\n        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;\n      }\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n      }\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n      function trailingEdge(time) {\n        timerId = void 0;\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = void 0;\n        return result;\n      }\n      function cancel() {\n        if (timerId !== void 0) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = void 0;\n      }\n      function flush() {\n        return timerId === void 0 ? result : trailingEdge(now());\n      }\n      function debounced() {\n        var time = now(), isInvoking = shouldInvoke(time);\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n        if (isInvoking) {\n          if (timerId === void 0) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === void 0) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n    function throttle2(func, wait, options) {\n      var leading = true, trailing = true;\n      if (typeof func != \"function\") {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = \"leading\" in options ? !!options.leading : leading;\n        trailing = \"trailing\" in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        \"leading\": leading,\n        \"maxWait\": wait,\n        \"trailing\": trailing\n      });\n    }\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == \"object\" || type == \"function\");\n    }\n    function isObjectLike(value) {\n      return !!value && typeof value == \"object\";\n    }\n    function isSymbol(value) {\n      return typeof value == \"symbol\" || isObjectLike(value) && objectToString.call(value) == symbolTag;\n    }\n    function toNumber(value) {\n      if (typeof value == \"number\") {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n        value = isObject(other) ? other + \"\" : other;\n      }\n      if (typeof value != \"string\") {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, \"\");\n      var isBinary = reIsBinary.test(value);\n      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n    }\n    module.exports = throttle2;\n  }\n});\n\n// ../../node_modules/date-fns/getDate/index.js\nvar require_getDate = __commonJS({\n  \"../../node_modules/date-fns/getDate/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getDate2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getDate2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var dayOfMonth = date.getDate();\n      return dayOfMonth;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getDay/index.js\nvar require_getDay = __commonJS({\n  \"../../node_modules/date-fns/getDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getDay2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getDay2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var day = date.getDay();\n      return day;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getHours/index.js\nvar require_getHours = __commonJS({\n  \"../../node_modules/date-fns/getHours/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getHours2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getHours2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var hours = date.getHours();\n      return hours;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getMinutes/index.js\nvar require_getMinutes = __commonJS({\n  \"../../node_modules/date-fns/getMinutes/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getMinutes2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getMinutes2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var minutes = date.getMinutes();\n      return minutes;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getMonth/index.js\nvar require_getMonth = __commonJS({\n  \"../../node_modules/date-fns/getMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getMonth2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getMonth2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var month = date.getMonth();\n      return month;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/getYear/index.js\nvar require_getYear = __commonJS({\n  \"../../node_modules/date-fns/getYear/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = getYear2;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function getYear2(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      return (0, _index.default)(dirtyDate).getFullYear();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addDays/index.js\nvar require_addDays = __commonJS({\n  \"../../node_modules/date-fns/addDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addDays;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addDays(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var date = (0, _index2.default)(dirtyDate);\n      var amount = (0, _index.default)(dirtyAmount);\n      if (isNaN(amount)) {\n        return new Date(NaN);\n      }\n      if (!amount) {\n        return date;\n      }\n      date.setDate(date.getDate() + amount);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/addMonths/index.js\nvar require_addMonths = __commonJS({\n  \"../../node_modules/date-fns/addMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = addMonths;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_toDate());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function addMonths(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var date = (0, _index2.default)(dirtyDate);\n      var amount = (0, _index.default)(dirtyAmount);\n      if (isNaN(amount)) {\n        return new Date(NaN);\n      }\n      if (!amount) {\n        return date;\n      }\n      var dayOfMonth = date.getDate();\n      var endOfDesiredMonth = new Date(date.getTime());\n      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n      var daysInMonth = endOfDesiredMonth.getDate();\n      if (dayOfMonth >= daysInMonth) {\n        return endOfDesiredMonth;\n      } else {\n        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n        return date;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/add/index.js\nvar require_add = __commonJS({\n  \"../../node_modules/date-fns/add/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = add2;\n    var _index = _interopRequireDefault(require_addDays());\n    var _index2 = _interopRequireDefault(require_addMonths());\n    var _index3 = _interopRequireDefault(require_toDate());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    var _index5 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function add2(dirtyDate, duration) {\n      (0, _index4.default)(2, arguments);\n      if (!duration || typeof duration !== \"object\")\n        return new Date(NaN);\n      var years = duration.years ? (0, _index5.default)(duration.years) : 0;\n      var months = duration.months ? (0, _index5.default)(duration.months) : 0;\n      var weeks = duration.weeks ? (0, _index5.default)(duration.weeks) : 0;\n      var days = duration.days ? (0, _index5.default)(duration.days) : 0;\n      var hours = duration.hours ? (0, _index5.default)(duration.hours) : 0;\n      var minutes = duration.minutes ? (0, _index5.default)(duration.minutes) : 0;\n      var seconds = duration.seconds ? (0, _index5.default)(duration.seconds) : 0;\n      var date = (0, _index3.default)(dirtyDate);\n      var dateWithMonths = months || years ? (0, _index2.default)(date, months + years * 12) : date;\n      var dateWithDays = days || weeks ? (0, _index.default)(dateWithMonths, days + weeks * 7) : dateWithMonths;\n      var minutesToAdd = minutes + hours * 60;\n      var secondsToAdd = seconds + minutesToAdd * 60;\n      var msToAdd = secondsToAdd * 1e3;\n      var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n      return finalDate;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subDays/index.js\nvar require_subDays = __commonJS({\n  \"../../node_modules/date-fns/subDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subDays;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addDays());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subDays(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/subMonths/index.js\nvar require_subMonths = __commonJS({\n  \"../../node_modules/date-fns/subMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = subMonths;\n    var _index = _interopRequireDefault(require_toInteger());\n    var _index2 = _interopRequireDefault(require_addMonths());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function subMonths(dirtyDate, dirtyAmount) {\n      (0, _index3.default)(2, arguments);\n      var amount = (0, _index.default)(dirtyAmount);\n      return (0, _index2.default)(dirtyDate, -amount);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/sub/index.js\nvar require_sub = __commonJS({\n  \"../../node_modules/date-fns/sub/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = sub2;\n    var _index = _interopRequireDefault(require_subDays());\n    var _index2 = _interopRequireDefault(require_subMonths());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = _interopRequireDefault(require_toInteger());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function sub2(date, duration) {\n      (0, _index3.default)(2, arguments);\n      if (!duration || typeof duration !== \"object\")\n        return new Date(NaN);\n      var years = duration.years ? (0, _index4.default)(duration.years) : 0;\n      var months = duration.months ? (0, _index4.default)(duration.months) : 0;\n      var weeks = duration.weeks ? (0, _index4.default)(duration.weeks) : 0;\n      var days = duration.days ? (0, _index4.default)(duration.days) : 0;\n      var hours = duration.hours ? (0, _index4.default)(duration.hours) : 0;\n      var minutes = duration.minutes ? (0, _index4.default)(duration.minutes) : 0;\n      var seconds = duration.seconds ? (0, _index4.default)(duration.seconds) : 0;\n      var dateWithoutMonths = (0, _index2.default)(date, months + years * 12);\n      var dateWithoutDays = (0, _index.default)(dateWithoutMonths, days + weeks * 7);\n      var minutestoSub = minutes + hours * 60;\n      var secondstoSub = seconds + minutestoSub * 60;\n      var mstoSub = secondstoSub * 1e3;\n      var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);\n      return finalDate;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/compareAsc/index.js\nvar require_compareAsc = __commonJS({\n  \"../../node_modules/date-fns/compareAsc/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = compareAsc;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function compareAsc(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var diff = dateLeft.getTime() - dateRight.getTime();\n      if (diff < 0) {\n        return -1;\n      } else if (diff > 0) {\n        return 1;\n      } else {\n        return diff;\n      }\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarYears/index.js\nvar require_differenceInCalendarYears = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarYears/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarYears;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      return dateLeft.getFullYear() - dateRight.getFullYear();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInYears/index.js\nvar require_differenceInYears = __commonJS({\n  \"../../node_modules/date-fns/differenceInYears/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInYears;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarYears());\n    var _index3 = _interopRequireDefault(require_compareAsc());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n      (0, _index4.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = (0, _index3.default)(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      dateLeft.setFullYear(1584);\n      dateRight.setFullYear(1584);\n      var isLastYearNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n      var result = sign * (difference - Number(isLastYearNotFull));\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarMonths/index.js\nvar require_differenceInCalendarMonths = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarMonths;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n      (0, _index2.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n      var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n      return yearDiff * 12 + monthDiff;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/endOfDay/index.js\nvar require_endOfDay = __commonJS({\n  \"../../node_modules/date-fns/endOfDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = endOfDay;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function endOfDay(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      date.setHours(23, 59, 59, 999);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/endOfMonth/index.js\nvar require_endOfMonth = __commonJS({\n  \"../../node_modules/date-fns/endOfMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = endOfMonth;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function endOfMonth(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      var month = date.getMonth();\n      date.setFullYear(date.getFullYear(), month + 1, 0);\n      date.setHours(23, 59, 59, 999);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/isLastDayOfMonth/index.js\nvar require_isLastDayOfMonth = __commonJS({\n  \"../../node_modules/date-fns/isLastDayOfMonth/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = isLastDayOfMonth;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_endOfDay());\n    var _index3 = _interopRequireDefault(require_endOfMonth());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function isLastDayOfMonth(dirtyDate) {\n      (0, _index4.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      return (0, _index2.default)(date).getTime() === (0, _index3.default)(date).getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMonths/index.js\nvar require_differenceInMonths = __commonJS({\n  \"../../node_modules/date-fns/differenceInMonths/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMonths;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarMonths());\n    var _index3 = _interopRequireDefault(require_compareAsc());\n    var _index4 = _interopRequireDefault(require_requiredArgs());\n    var _index5 = _interopRequireDefault(require_isLastDayOfMonth());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n      (0, _index4.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = (0, _index3.default)(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      var result;\n      if (difference < 1) {\n        result = 0;\n      } else {\n        if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n          dateLeft.setDate(30);\n        }\n        dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n        var isLastMonthNotFull = (0, _index3.default)(dateLeft, dateRight) === -sign;\n        if ((0, _index5.default)((0, _index.default)(dirtyDateLeft)) && difference === 1 && (0, _index3.default)(dirtyDateLeft, dateRight) === 1) {\n          isLastMonthNotFull = false;\n        }\n        result = sign * (difference - Number(isLastMonthNotFull));\n      }\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/startOfDay/index.js\nvar require_startOfDay = __commonJS({\n  \"../../node_modules/date-fns/startOfDay/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = startOfDay;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function startOfDay(dirtyDate) {\n      (0, _index2.default)(1, arguments);\n      var date = (0, _index.default)(dirtyDate);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInCalendarDays/index.js\nvar require_differenceInCalendarDays = __commonJS({\n  \"../../node_modules/date-fns/differenceInCalendarDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInCalendarDays;\n    var _index = _interopRequireDefault(require_getTimezoneOffsetInMilliseconds());\n    var _index2 = _interopRequireDefault(require_startOfDay());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    var MILLISECONDS_IN_DAY = 864e5;\n    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n      (0, _index3.default)(2, arguments);\n      var startOfDayLeft = (0, _index2.default)(dirtyDateLeft);\n      var startOfDayRight = (0, _index2.default)(dirtyDateRight);\n      var timestampLeft = startOfDayLeft.getTime() - (0, _index.default)(startOfDayLeft);\n      var timestampRight = startOfDayRight.getTime() - (0, _index.default)(startOfDayRight);\n      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInDays/index.js\nvar require_differenceInDays = __commonJS({\n  \"../../node_modules/date-fns/differenceInDays/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInDays;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_differenceInCalendarDays());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function compareLocalAsc(dateLeft, dateRight) {\n      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n      if (diff < 0) {\n        return -1;\n      } else if (diff > 0) {\n        return 1;\n      } else {\n        return diff;\n      }\n    }\n    function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n      (0, _index3.default)(2, arguments);\n      var dateLeft = (0, _index.default)(dirtyDateLeft);\n      var dateRight = (0, _index.default)(dirtyDateRight);\n      var sign = compareLocalAsc(dateLeft, dateRight);\n      var difference = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      dateLeft.setDate(dateLeft.getDate() - sign * difference);\n      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);\n      var result = sign * (difference - isLastDayNotFull);\n      return result === 0 ? 0 : result;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/constants/index.js\nvar require_constants = __commonJS({\n  \"../../node_modules/date-fns/constants/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.secondsInMinute = exports.secondsInHour = exports.quartersInYear = exports.monthsInYear = exports.monthsInQuarter = exports.minutesInHour = exports.minTime = exports.millisecondsInSecond = exports.millisecondsInHour = exports.millisecondsInMinute = exports.maxTime = exports.daysInWeek = void 0;\n    var daysInWeek = 7;\n    exports.daysInWeek = daysInWeek;\n    var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;\n    exports.maxTime = maxTime;\n    var millisecondsInMinute = 6e4;\n    exports.millisecondsInMinute = millisecondsInMinute;\n    var millisecondsInHour = 36e5;\n    exports.millisecondsInHour = millisecondsInHour;\n    var millisecondsInSecond = 1e3;\n    exports.millisecondsInSecond = millisecondsInSecond;\n    var minTime = -maxTime;\n    exports.minTime = minTime;\n    var minutesInHour = 60;\n    exports.minutesInHour = minutesInHour;\n    var monthsInQuarter = 3;\n    exports.monthsInQuarter = monthsInQuarter;\n    var monthsInYear = 12;\n    exports.monthsInYear = monthsInYear;\n    var quartersInYear = 4;\n    exports.quartersInYear = quartersInYear;\n    var secondsInHour = 3600;\n    exports.secondsInHour = secondsInHour;\n    var secondsInMinute = 60;\n    exports.secondsInMinute = secondsInMinute;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMilliseconds/index.js\nvar require_differenceInMilliseconds = __commonJS({\n  \"../../node_modules/date-fns/differenceInMilliseconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMilliseconds;\n    var _index = _interopRequireDefault(require_toDate());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMilliseconds(dateLeft, dateRight) {\n      (0, _index2.default)(2, arguments);\n      return (0, _index.default)(dateLeft).getTime() - (0, _index.default)(dateRight).getTime();\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/_lib/roundingMethods/index.js\nvar require_roundingMethods = __commonJS({\n  \"../../node_modules/date-fns/_lib/roundingMethods/index.js\"(exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.getRoundingMethod = getRoundingMethod;\n    var roundingMap = {\n      ceil: Math.ceil,\n      round: Math.round,\n      floor: Math.floor,\n      trunc: function(value) {\n        return value < 0 ? Math.ceil(value) : Math.floor(value);\n      }\n    };\n    var defaultRoundingMethod = \"trunc\";\n    function getRoundingMethod(method) {\n      return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n    }\n  }\n});\n\n// ../../node_modules/date-fns/differenceInHours/index.js\nvar require_differenceInHours = __commonJS({\n  \"../../node_modules/date-fns/differenceInHours/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInHours;\n    var _index = require_constants();\n    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInHours(dateLeft, dateRight, options) {\n      (0, _index3.default)(2, arguments);\n      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInHour;\n      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInMinutes/index.js\nvar require_differenceInMinutes = __commonJS({\n  \"../../node_modules/date-fns/differenceInMinutes/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInMinutes;\n    var _index = require_constants();\n    var _index2 = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index3 = _interopRequireDefault(require_requiredArgs());\n    var _index4 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInMinutes(dateLeft, dateRight, options) {\n      (0, _index3.default)(2, arguments);\n      var diff = (0, _index2.default)(dateLeft, dateRight) / _index.millisecondsInMinute;\n      return (0, _index4.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/differenceInSeconds/index.js\nvar require_differenceInSeconds = __commonJS({\n  \"../../node_modules/date-fns/differenceInSeconds/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = differenceInSeconds;\n    var _index = _interopRequireDefault(require_differenceInMilliseconds());\n    var _index2 = _interopRequireDefault(require_requiredArgs());\n    var _index3 = require_roundingMethods();\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function differenceInSeconds(dateLeft, dateRight, options) {\n      (0, _index2.default)(2, arguments);\n      var diff = (0, _index.default)(dateLeft, dateRight) / 1e3;\n      return (0, _index3.getRoundingMethod)(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n    }\n    module.exports = exports.default;\n  }\n});\n\n// ../../node_modules/date-fns/intervalToDuration/index.js\nvar require_intervalToDuration = __commonJS({\n  \"../../node_modules/date-fns/intervalToDuration/index.js\"(exports, module) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.default = intervalToDuration2;\n    var _index = _interopRequireDefault(require_compareAsc());\n    var _index2 = _interopRequireDefault(require_differenceInYears());\n    var _index3 = _interopRequireDefault(require_differenceInMonths());\n    var _index4 = _interopRequireDefault(require_differenceInDays());\n    var _index5 = _interopRequireDefault(require_differenceInHours());\n    var _index6 = _interopRequireDefault(require_differenceInMinutes());\n    var _index7 = _interopRequireDefault(require_differenceInSeconds());\n    var _index8 = _interopRequireDefault(require_isValid());\n    var _index9 = _interopRequireDefault(require_requiredArgs());\n    var _index10 = _interopRequireDefault(require_toDate());\n    var _index11 = _interopRequireDefault(require_sub());\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : { default: obj };\n    }\n    function intervalToDuration2(_ref) {\n      var start = _ref.start, end = _ref.end;\n      (0, _index9.default)(1, arguments);\n      var dateLeft = (0, _index10.default)(start);\n      var dateRight = (0, _index10.default)(end);\n      if (!(0, _index8.default)(dateLeft)) {\n        throw new RangeError(\"Start Date is invalid\");\n      }\n      if (!(0, _index8.default)(dateRight)) {\n        throw new RangeError(\"End Date is invalid\");\n      }\n      var duration = {\n        years: 0,\n        months: 0,\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n      };\n      var sign = (0, _index.default)(dateLeft, dateRight);\n      duration.years = Math.abs((0, _index2.default)(dateLeft, dateRight));\n      var remainingMonths = (0, _index11.default)(dateLeft, {\n        years: sign * duration.years\n      });\n      duration.months = Math.abs((0, _index3.default)(remainingMonths, dateRight));\n      var remainingDays = (0, _index11.default)(remainingMonths, {\n        months: sign * duration.months\n      });\n      duration.days = Math.abs((0, _index4.default)(remainingDays, dateRight));\n      var remainingHours = (0, _index11.default)(remainingDays, {\n        days: sign * duration.days\n      });\n      duration.hours = Math.abs((0, _index5.default)(remainingHours, dateRight));\n      var remainingMinutes = (0, _index11.default)(remainingHours, {\n        hours: sign * duration.hours\n      });\n      duration.minutes = Math.abs((0, _index6.default)(remainingMinutes, dateRight));\n      var remainingSeconds = (0, _index11.default)(remainingMinutes, {\n        minutes: sign * duration.minutes\n      });\n      duration.seconds = Math.abs((0, _index7.default)(remainingSeconds, dateRight));\n      return duration;\n    }\n    module.exports = exports.default;\n  }\n});\n\n// src/third-party/collection.tsx\n\n\n\n\n\n// src/third-party/collection-row.tsx\n\n\n// src/third-party/collection-column-title.tsx\n\n\n// src/icons/type-title.tsx\n\nfunction SvgTypeTitle(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z\"\n  }));\n}\nvar type_title_default = SvgTypeTitle;\n\n// src/icons/type-text.tsx\n\nfunction SvgTypeText(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z\"\n  }));\n}\nvar type_text_default = SvgTypeText;\n\n// src/icons/type-number.tsx\n\nfunction SvgTypeNumber(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z\"\n  }));\n}\nvar type_number_default = SvgTypeNumber;\n\n// src/icons/type-select.tsx\n\nfunction SvgTypeSelect(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z\"\n  }));\n}\nvar type_select_default = SvgTypeSelect;\n\n// src/icons/type-multi-select.tsx\n\nfunction SvgTypeMultiSelect(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z\"\n  }));\n}\nvar type_multi_select_default = SvgTypeMultiSelect;\n\n// src/icons/type-date.tsx\n\nfunction SvgTypeDate(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z\"\n  }));\n}\nvar type_date_default = SvgTypeDate;\n\n// src/icons/type-person.tsx\n\nfunction SvgTypePerson(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z\"\n  }));\n}\nvar type_person_default = SvgTypePerson;\n\n// src/icons/type-file.tsx\n\nfunction SvgTypeFile(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z\"\n  }));\n}\nvar type_file_default = SvgTypeFile;\n\n// src/icons/type-checkbox.tsx\n\nfunction SvgTypeCheckbox(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z\"\n  }));\n}\nvar type_checkbox_default = SvgTypeCheckbox;\n\n// src/icons/type-url.tsx\n\nfunction SvgTypeUrl(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z\"\n  }));\n}\nvar type_url_default = SvgTypeUrl;\n\n// src/icons/type-email.tsx\n\nfunction SvgTypeEmail(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z\"\n  }));\n}\nvar type_email_default = SvgTypeEmail;\n\n// src/icons/type-phone-number.tsx\n\nfunction SvgTypePhoneNumber(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z\"\n  }));\n}\nvar type_phone_number_default = SvgTypePhoneNumber;\n\n// src/icons/type-formula.tsx\n\nfunction SvgTypeFormula(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z\"\n  }));\n}\nvar type_formula_default = SvgTypeFormula;\n\n// src/icons/type-relation.tsx\n\nfunction SvgTypeRelation(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z\"\n  }));\n}\nvar type_relation_default = SvgTypeRelation;\n\n// src/icons/type-person-2.tsx\n\nfunction SvgTypePerson2(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z\"\n  }));\n}\nvar type_person_2_default = SvgTypePerson2;\n\n// src/icons/type-timestamp.tsx\n\nfunction SvgTypeTimestamp(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z\"\n  }));\n}\nvar type_timestamp_default = SvgTypeTimestamp;\n\n// src/icons/property-icon.tsx\nvar iconMap = {\n  title: type_title_default,\n  text: type_text_default,\n  number: type_number_default,\n  select: type_select_default,\n  multi_select: type_multi_select_default,\n  date: type_date_default,\n  person: type_person_default,\n  file: type_file_default,\n  checkbox: type_checkbox_default,\n  url: type_url_default,\n  email: type_email_default,\n  phone_number: type_phone_number_default,\n  formula: type_formula_default,\n  relation: type_relation_default,\n  created_time: type_timestamp_default,\n  last_edited_time: type_timestamp_default,\n  created_by: type_person_2_default,\n  last_edited_by: type_person_2_default\n};\nvar PropertyIcon = (_a) => {\n  var _b = _a, {\n    type\n  } = _b, rest = __objRest(_b, [\n    \"type\"\n  ]);\n  const icon = iconMap[type];\n  if (!icon)\n    return null;\n  return icon(rest);\n};\n\n// src/third-party/collection-column-title.tsx\nvar CollectionColumnTitle = ({ schema }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-column-title\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PropertyIcon, {\n    className: \"notion-collection-column-title-icon\",\n    type: schema.type\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-column-title-body\"\n  }, schema.name));\n};\n\n// src/third-party/property.tsx\nvar import_format_number = __toESM(require_format_number(), 1);\nvar import_format2 = __toESM(require_format(), 1);\n\n\n// src/utils.ts\n\nvar defaultMapImageUrl = (url, block) => {\n  if (!url) {\n    return null;\n  }\n  if (url.startsWith(\"data:\")) {\n    return url;\n  }\n  if (url.startsWith(\"https://images.unsplash.com\")) {\n    return url;\n  }\n  try {\n    const u = new URL(url);\n    if (u.pathname.startsWith(\"/secure.notion-static.com\") && u.hostname.endsWith(\".amazonaws.com\")) {\n      if (u.searchParams.has(\"X-Amz-Credential\") && u.searchParams.has(\"X-Amz-Signature\") && u.searchParams.has(\"X-Amz-Algorithm\")) {\n        return url;\n      }\n    }\n  } catch (e) {\n  }\n  if (url.startsWith(\"/images\")) {\n    url = `https://www.notion.so${url}`;\n  }\n  url = `https://www.notion.so${url.startsWith(\"/image\") ? url : `/image/${encodeURIComponent(url)}`}`;\n  const notionImageUrlV2 = new URL(url);\n  let table = block.parent_table === \"space\" ? \"block\" : block.parent_table;\n  if (table === \"collection\") {\n    table = \"block\";\n  }\n  notionImageUrlV2.searchParams.set(\"table\", table);\n  notionImageUrlV2.searchParams.set(\"id\", block.id);\n  notionImageUrlV2.searchParams.set(\"cache\", \"v2\");\n  url = notionImageUrlV2.toString();\n  return url;\n};\nvar defaultMapPageUrl = (rootPageId) => (pageId) => {\n  pageId = (pageId || \"\").replace(/-/g, \"\");\n  if (rootPageId && pageId === rootPageId) {\n    return \"/\";\n  } else {\n    return `/${pageId}`;\n  }\n};\nvar cs = (...classes) => classes.filter((a) => !!a).join(\" \");\nvar getHashFragmentValue = (url) => {\n  return url.includes(\"#\") ? url.replace(/^.+(#.+)$/, \"$1\") : \"\";\n};\nvar isBrowser = typeof window !== \"undefined\";\nvar youtubeDomains = /* @__PURE__ */ new Set([\n  \"youtu.be\",\n  \"youtube.com\",\n  \"www.youtube.com\",\n  \"youtube-nocookie.com\",\n  \"www.youtube-nocookie.com\"\n]);\nvar getYoutubeId = (url) => {\n  try {\n    const { hostname } = new URL(url);\n    if (!youtubeDomains.has(hostname)) {\n      return null;\n    }\n    const regExp = /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i;\n    const match = url.match(regExp);\n    if (match && match[2].length == 11) {\n      return match[2];\n    }\n  } catch (e) {\n  }\n  return null;\n};\n\n// src/context.tsx\n\n\n// src/next.tsx\n\n\nvar wrapNextImage = (NextImage) => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.memo(function ReactNotionXNextImage(_a) {\n    var _b = _a, {\n      src,\n      alt,\n      width,\n      height,\n      className,\n      style,\n      layout\n    } = _b, rest = __objRest(_b, [\n      \"src\",\n      \"alt\",\n      \"width\",\n      \"height\",\n      \"className\",\n      \"style\",\n      \"layout\"\n    ]);\n    if (!layout) {\n      layout = width && height ? \"intrinsic\" : \"fill\";\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextImage, __spreadValues({\n      className,\n      src,\n      alt,\n      width: layout === \"intrinsic\" && width,\n      height: layout === \"intrinsic\" && height,\n      objectFit: style == null ? void 0 : style.objectFit,\n      objectPosition: style == null ? void 0 : style.objectPosition,\n      layout\n    }, rest));\n  }, react_fast_compare__WEBPACK_IMPORTED_MODULE_4__);\n};\nvar wrapNextLink = (NextLink) => function ReactNotionXNextLink(_a) {\n  var _b = _a, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  } = _b, linkProps = __objRest(_b, [\n    \"href\",\n    \"as\",\n    \"passHref\",\n    \"prefetch\",\n    \"replace\",\n    \"scroll\",\n    \"shallow\",\n    \"locale\"\n  ]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NextLink, {\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, linkProps)));\n};\n\n// src/components/asset-wrapper.tsx\n\n\n// src/components/asset.tsx\n\n\n\n// src/components/lazy-image.tsx\n\n\n\nvar LazyImage = (_a) => {\n  var _b = _a, {\n    src,\n    alt,\n    className,\n    style,\n    zoomable = false,\n    priority = false,\n    height\n  } = _b, rest = __objRest(_b, [\n    \"src\",\n    \"alt\",\n    \"className\",\n    \"style\",\n    \"zoomable\",\n    \"priority\",\n    \"height\"\n  ]);\n  var _a2, _b2, _c;\n  const { recordMap, zoom, previewImages, forceCustomImages, components } = useNotionContext();\n  const zoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(zoom ? zoom.clone() : null);\n  const previewImage = previewImages ? (_c = (_a2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _a2[src]) != null ? _c : (_b2 = recordMap == null ? void 0 : recordMap.preview_images) == null ? void 0 : _b2[(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeUrl)(src)] : null;\n  const onLoad = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((e) => {\n    if (zoomable && (e.target.src || e.target.srcset)) {\n      if (zoomRef.current) {\n        ;\n        zoomRef.current.attach(e.target);\n      }\n    }\n  }, [zoomRef, zoomable]);\n  const attachZoom = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((image) => {\n    if (zoomRef.current && image) {\n      ;\n      zoomRef.current.attach(image);\n    }\n  }, [zoomRef]);\n  const attachZoomRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => zoomable ? attachZoom : void 0, [zoomable, attachZoom]);\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth;\n    if (components.Image) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        style,\n        className,\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        blurDataURL: previewImage.dataURIBase64,\n        placeholder: \"blur\",\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.LazyImageFull, __spreadProps(__spreadValues({\n      src\n    }, rest), {\n      experimentalDecode: true\n    }), ({ imageState, ref }) => {\n      const isLoaded = imageState === react_lazy_images__WEBPACK_IMPORTED_MODULE_5__.ImageState.LoadSuccess;\n      const wrapperStyle = {\n        width: \"100%\"\n      };\n      const imgStyle = {};\n      if (height) {\n        wrapperStyle.height = height;\n      } else {\n        imgStyle.position = \"absolute\";\n        wrapperStyle.paddingBottom = `${aspectRatio * 100}%`;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: cs(\"lazy-image-wrapper\", isLoaded && \"lazy-image-loaded\", className),\n        style: wrapperStyle\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-preview\",\n        src: previewImage.dataURIBase64,\n        alt,\n        ref,\n        style,\n        decoding: \"async\"\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        className: \"lazy-image-real\",\n        src,\n        alt,\n        ref: attachZoomRef,\n        style: __spreadValues(__spreadValues({}, style), imgStyle),\n        width: previewImage.originalWidth,\n        height: previewImage.originalHeight,\n        decoding: \"async\",\n        loading: \"lazy\"\n      }));\n    });\n  } else {\n    if (components.Image && forceCustomImages) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Image, {\n        src,\n        alt,\n        className,\n        style,\n        width: null,\n        height: height || null,\n        priority,\n        onLoad\n      });\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({\n      className,\n      style,\n      src,\n      alt,\n      ref: attachZoomRef,\n      loading: \"lazy\",\n      decoding: \"async\"\n    }, rest));\n  }\n};\n\n// src/components/lite-youtube-embed.tsx\n\nvar qs = (params) => {\n  return Object.keys(params).map((key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`).join(\"&\");\n};\nvar LiteYouTubeEmbed = ({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = \"YouTube video\",\n  alt = \"Video preview\",\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) => {\n  const muteParam = mute || defaultPlay ? \"1\" : \"0\";\n  const queryString = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => qs(__spreadValues({ autoplay: \"1\", mute: muteParam }, params)), [muteParam, params]);\n  const resolution = \"hqdefault\";\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`;\n  const ytUrl = \"https://www.youtube-nocookie.com\";\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`;\n  const [isPreconnected, setIsPreconnected] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const [iframeInitialized, setIframeInitialized] = react__WEBPACK_IMPORTED_MODULE_0__.useState(defaultPlay);\n  const [isIframeLoaded, setIsIframeLoaded] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const warmConnections = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (isPreconnected)\n      return;\n    setIsPreconnected(true);\n  }, [isPreconnected]);\n  const onLoadIframe = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    if (iframeInitialized)\n      return;\n    setIframeInitialized(true);\n  }, [iframeInitialized]);\n  const onIframeLoaded = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsIframeLoaded(true);\n  }, []);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preload\",\n    href: posterUrl,\n    as: \"image\"\n  }), isPreconnected && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: ytUrl\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://www.google.com\"\n  })), isPreconnected && adLinksPreconnect && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://static.doubleclick.net\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://googleads.g.doubleclick.net\"\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    onClick: onLoadIframe,\n    onPointerOver: warmConnections,\n    className: cs(\"notion-yt-lite\", isIframeLoaded && \"notion-yt-loaded\", iframeInitialized && \"notion-yt-initialized\", className),\n    style\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n    src: posterUrl,\n    className: \"notion-yt-thumbnail\",\n    loading: lazyImage ? \"lazy\" : void 0,\n    alt\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-yt-playbtn\"\n  }), iframeInitialized && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    title: iframeTitle,\n    src: iframeSrc,\n    onLoad: onIframeLoaded\n  })));\n};\n\n// src/components/asset.tsx\nvar isServer = typeof window === \"undefined\";\nvar supportedAssetTypes = [\n  \"video\",\n  \"image\",\n  \"embed\",\n  \"figma\",\n  \"typeform\",\n  \"excalidraw\",\n  \"maps\",\n  \"tweet\",\n  \"pdf\",\n  \"gist\",\n  \"codepen\",\n  \"drive\"\n];\nvar Asset = ({ block, zoomable = true, children }) => {\n  var _a, _b, _c, _d, _e, _f;\n  const { recordMap, mapImageUrl, components } = useNotionContext();\n  if (!block || !supportedAssetTypes.includes(block.type)) {\n    return null;\n  }\n  const style = {\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    flexDirection: \"column\"\n  };\n  const assetStyle = {};\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format;\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = \"100vw\";\n      } else {\n        style.width = \"100%\";\n      }\n      if (block.type === \"video\") {\n        if (block_height) {\n          style.height = block_height;\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`;\n        } else if (block_preserve_scale) {\n          style.objectFit = \"contain\";\n        }\n      } else if (block_aspect_ratio && block.type !== \"image\") {\n        style.paddingBottom = `${block_aspect_ratio * 100}%`;\n      } else if (block_height) {\n        style.height = block_height;\n      } else if (block_preserve_scale) {\n        if (block.type === \"image\") {\n          style.height = \"100%\";\n        } else {\n          style.paddingBottom = \"75%\";\n          style.minHeight = 100;\n        }\n      }\n    } else {\n      if (block_width) {\n        style.width = block_width;\n      }\n      if (block_preserve_scale && block.type !== \"image\") {\n        style.paddingBottom = \"50%\";\n        style.minHeight = 100;\n      } else {\n        if (block_height && block.type !== \"image\") {\n          style.height = block_height;\n        }\n      }\n    }\n    if (block.type === \"image\") {\n      assetStyle.objectFit = \"cover\";\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = \"contain\";\n    }\n  }\n  const source = ((_a = recordMap.signed_urls) == null ? void 0 : _a[block.id]) || ((_d = (_c = (_b = block.properties) == null ? void 0 : _b.source) == null ? void 0 : _c[0]) == null ? void 0 : _d[0]);\n  let content = null;\n  if (!source) {\n    return null;\n  }\n  if (block.type === \"tweet\") {\n    const src = source;\n    if (!src)\n      return null;\n    const id = src.split(\"?\")[0].split(\"/\").pop();\n    if (!id)\n      return null;\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      style: __spreadProps(__spreadValues({}, assetStyle), {\n        maxWidth: 420,\n        width: \"100%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      })\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Tweet, {\n      id\n    }));\n  } else if (block.type === \"pdf\") {\n    style.overflow = \"auto\";\n    style.background = \"rgb(226, 226, 226)\";\n    if (!style.padding) {\n      style.padding = \"8px 16px\";\n    }\n    if (!isServer) {\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Pdf, {\n        file: source\n      });\n    }\n  } else if (block.type === \"embed\" || block.type === \"video\" || block.type === \"figma\" || block.type === \"typeform\" || block.type === \"gist\" || block.type === \"maps\" || block.type === \"excalidraw\" || block.type === \"codepen\" || block.type === \"drive\") {\n    if (block.type === \"video\" && source && source.indexOf(\"youtube\") < 0 && source.indexOf(\"youtu.be\") < 0 && source.indexOf(\"vimeo\") < 0 && source.indexOf(\"wistia\") < 0 && source.indexOf(\"loom\") < 0 && source.indexOf(\"videoask\") < 0 && source.indexOf(\"getcloudapp\") < 0) {\n      style.paddingBottom = void 0;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", {\n        playsInline: true,\n        controls: true,\n        preload: \"metadata\",\n        style: assetStyle,\n        src: source,\n        title: block.type\n      });\n    } else {\n      let src = ((_e = block.format) == null ? void 0 : _e.display_source) || source;\n      if (src) {\n        const youtubeVideoId = block.type === \"video\" ? getYoutubeId(src) : null;\n        if (youtubeVideoId) {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LiteYouTubeEmbed, {\n            id: youtubeVideoId,\n            style: assetStyle,\n            className: \"notion-asset-object-fit\"\n          });\n        } else if (block.type === \"gist\") {\n          if (!src.endsWith(\".pibb\")) {\n            src = `${src}.pibb`;\n          }\n          assetStyle.width = \"100%\";\n          style.paddingBottom = \"50%\";\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            style: assetStyle,\n            className: \"notion-asset-object-fit\",\n            src,\n            title: \"GitHub Gist\",\n            frameBorder: \"0\",\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        } else {\n          content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"iframe\", {\n            className: \"notion-asset-object-fit\",\n            style: assetStyle,\n            src,\n            title: `iframe ${block.type}`,\n            frameBorder: \"0\",\n            allowFullScreen: true,\n            loading: \"lazy\",\n            scrolling: \"auto\"\n          });\n        }\n      }\n    }\n  } else if (block.type === \"image\") {\n    const src = mapImageUrl(source, block);\n    const caption = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)((_f = block.properties) == null ? void 0 : _f.caption);\n    const alt = caption || \"notion image\";\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n      src,\n      alt,\n      zoomable,\n      height: style.height,\n      style: assetStyle\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    style\n  }, content, block.type === \"image\" && children), block.type !== \"image\" && children);\n};\n\n// src/components/text.tsx\n\n\n\n// src/components/page-title.tsx\n\n\n\n// src/components/page-icon.tsx\n\n\n\n// src/icons/default-page-icon.tsx\n\nvar DefaultPageIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 30 30\",\n    width: \"16\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z\"\n  }));\n};\n\n// src/components/page-icon.tsx\nvar isIconBlock = (value) => {\n  return value.type === \"page\" || value.type === \"callout\" || value.type === \"collection_view\" || value.type === \"collection_view_page\";\n};\nvar PageIconImpl = ({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) => {\n  var _a;\n  const { mapImageUrl, recordMap } = useNotionContext();\n  let isImage = false;\n  let content = null;\n  if (isIconBlock(block)) {\n    const icon = ((_a = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockIcon)(block, recordMap)) == null ? void 0 : _a.trim()) || defaultIcon;\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, recordMap);\n    if (icon && (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.isUrl)(icon)) {\n      const url = mapImageUrl(icon, block);\n      isImage = true;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n        src: url,\n        alt: title || \"page icon\",\n        className: cs(className, \"notion-page-icon\")\n      });\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true;\n        content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultPageIcon, {\n          className: cs(className, \"notion-page-icon\"),\n          alt: title ? title : \"page icon\"\n        });\n      }\n    } else {\n      isImage = false;\n      content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: cs(className, \"notion-page-icon\"),\n        role: \"img\",\n        \"aria-label\": icon\n      }, icon);\n    }\n  }\n  if (!content) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(inline ? \"notion-page-icon-inline\" : \"notion-page-icon-hero\", isImage ? \"notion-page-icon-image\" : \"notion-page-icon-span\")\n  }, content);\n};\nvar PageIcon = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageIconImpl);\n\n// src/components/page-title.tsx\nvar PageTitleImpl = (_a) => {\n  var _b = _a, { block, className, defaultIcon } = _b, rest = __objRest(_b, [\"block\", \"className\", \"defaultIcon\"]);\n  var _a2, _b2;\n  const { recordMap } = useNotionContext();\n  if (!block)\n    return null;\n  if (block.type === \"collection_view_page\" || block.type === \"collection_view\") {\n    const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, recordMap);\n    if (!title) {\n      return null;\n    }\n    const titleDecoration = [[title]];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n      className: cs(\"notion-page-title\", className)\n    }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      block,\n      defaultIcon,\n      className: \"notion-page-title-icon\"\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-page-title-text\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: titleDecoration,\n      block\n    })));\n  }\n  if (!((_a2 = block.properties) == null ? void 0 : _a2.title)) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({\n    className: cs(\"notion-page-title\", className)\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n    block,\n    defaultIcon,\n    className: \"notion-page-title-icon\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-page-title-text\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: (_b2 = block.properties) == null ? void 0 : _b2.title,\n    block\n  })));\n};\nvar PageTitle = react__WEBPACK_IMPORTED_MODULE_0__.memo(PageTitleImpl);\n\n// src/components/graceful-image.tsx\n\n\nvar GracefulImage = (props) => {\n  if (isBrowser) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_image__WEBPACK_IMPORTED_MODULE_6__.Img, __spreadValues({}, props));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", __spreadValues({}, props));\n  }\n};\n\n// src/components/eoi.tsx\n\n\n// src/icons/type-github.tsx\n\nfunction SvgTypeGitHub(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 260 260\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z\",\n    fill: \"#161614\"\n  })));\n}\nvar type_github_default = SvgTypeGitHub;\n\n// src/components/eoi.tsx\nvar EOI = ({ block, inline, className }) => {\n  var _a, _b, _c;\n  const { components } = useNotionContext();\n  const { original_url, attributes, domain } = (block == null ? void 0 : block.format) || {};\n  if (!original_url || !attributes) {\n    return null;\n  }\n  const title = (_a = attributes.find((attr) => attr.id === \"title\")) == null ? void 0 : _a.values[0];\n  let owner = (_b = attributes.find((attr) => attr.id === \"owner\")) == null ? void 0 : _b.values[0];\n  const lastUpdatedAt = (_c = attributes.find((attr) => attr.id === \"updated_at\")) == null ? void 0 : _c.values[0];\n  const lastUpdated = lastUpdatedAt ? (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatNotionDateTime)(lastUpdatedAt) : null;\n  let externalImage;\n  switch (domain) {\n    case \"github.com\":\n      externalImage = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(type_github_default, null);\n      if (owner) {\n        const parts = owner.split(\"/\");\n        owner = parts[parts.length - 1];\n      }\n      break;\n    default:\n      if (true) {\n        console.log(`Unsupported external_object_instance domain \"${domain}\"`, JSON.stringify(block, null, 2));\n      }\n      return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: original_url,\n    className: cs(\"notion-external\", inline ? \"notion-external-mention\" : \"notion-external-block notion-row\", className)\n  }, externalImage && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-image\"\n  }, externalImage), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-description\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-title\"\n  }, title), (owner || lastUpdated) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-external-subtitle\"\n  }, owner && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, owner), owner && lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \" \\u2022 \"), lastUpdated && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, \"Updated \", lastUpdated))));\n};\n\n// src/components/text.tsx\nvar Text = ({ value, block, linkProps, linkProtocol }) => {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, value == null ? void 0 : value.map(([text, decorations], index) => {\n    if (!decorations) {\n      if (text === \",\") {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n          key: index,\n          style: { padding: \"0.5em\" }\n        });\n      } else {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n          key: index\n        }, text);\n      }\n    }\n    const formatted = decorations.reduce((element, decorator) => {\n      var _a, _b, _c, _d, _e;\n      switch (decorator[0]) {\n        case \"p\": {\n          const blockId = decorator[1];\n          const linkedBlock = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n          if (!linkedBlock) {\n            console.log('\"p\" missing block', blockId);\n            return null;\n          }\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n            className: \"notion-link\",\n            href: mapPageUrl(blockId)\n          }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n            block: linkedBlock\n          }));\n        }\n        case \"\\u2023\": {\n          const linkType = decorator[1][0];\n          const id = decorator[1][1];\n          switch (linkType) {\n            case \"u\": {\n              const user = (_b = recordMap.notion_user[id]) == null ? void 0 : _b.value;\n              if (!user) {\n                console.log('\"\\u2023\" missing user', id);\n                return null;\n              }\n              const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n                className: \"notion-user\",\n                src: mapImageUrl(user.profile_photo, block),\n                alt: name\n              });\n            }\n            default: {\n              const linkedBlock = (_c = recordMap.block[id]) == null ? void 0 : _c.value;\n              if (!linkedBlock) {\n                console.log('\"\\u2023\" missing block', linkType, id);\n                return null;\n              }\n              return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadProps(__spreadValues({\n                className: \"notion-link\",\n                href: mapPageUrl(id)\n              }, linkProps), {\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n                block: linkedBlock\n              }));\n            }\n          }\n        }\n        case \"h\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: `notion-${decorator[1]}`\n          }, element);\n        case \"c\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"code\", {\n            className: \"notion-inline-code\"\n          }, element);\n        case \"b\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"b\", null, element);\n        case \"i\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"em\", null, element);\n        case \"s\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"s\", null, element);\n        case \"_\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: \"notion-inline-underscore\"\n          }, element);\n        case \"e\":\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Equation, {\n            math: decorator[1],\n            inline: true\n          });\n        case \"m\":\n          return element;\n        case \"a\": {\n          const v = decorator[1];\n          const pathname = v.substr(1);\n          const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(pathname, { uuid: true });\n          if ((v[0] === \"/\" || v.includes(rootDomain)) && id) {\n            const href = v.includes(rootDomain) ? v : `${mapPageUrl(id)}${getHashFragmentValue(v)}`;\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadValues({\n              className: \"notion-link\",\n              href\n            }, linkProps), element);\n          } else {\n            return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, __spreadValues({\n              className: \"notion-link\",\n              href: linkProtocol ? `${linkProtocol}:${decorator[1]}` : decorator[1]\n            }, linkProps), element);\n          }\n        }\n        case \"d\": {\n          const v = decorator[1];\n          const type = v == null ? void 0 : v.type;\n          if (type === \"date\") {\n            const startDate = v.start_date;\n            return (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(startDate);\n          } else if (type === \"daterange\") {\n            const startDate = v.start_date;\n            const endDate = v.end_date;\n            return `${(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(startDate)} \\u2192 ${(0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.formatDate)(endDate)}`;\n          } else {\n            return element;\n          }\n        }\n        case \"u\": {\n          const userId = decorator[1];\n          const user = (_d = recordMap.notion_user[userId]) == null ? void 0 : _d.value;\n          if (!user) {\n            console.log(\"missing user\", userId);\n            return null;\n          }\n          const name = [user.given_name, user.family_name].filter(Boolean).join(\" \");\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n            className: \"notion-user\",\n            src: mapImageUrl(user.profile_photo, block),\n            alt: name\n          });\n        }\n        case \"eoi\": {\n          const blockId = decorator[1];\n          const externalObjectInstance = (_e = recordMap.block[blockId]) == null ? void 0 : _e.value;\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EOI, {\n            block: externalObjectInstance,\n            inline: true\n          });\n        }\n        default:\n          if (true) {\n            console.log(\"unsupported text format\", decorator);\n          }\n          return element;\n      }\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, text));\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: index\n    }, formatted);\n  }));\n};\n\n// src/components/header.tsx\n\n\n\n\n// src/icons/search-icon.tsx\n\nvar SearchIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    className: cs(\"notion-icon\", className),\n    viewBox: \"0 0 17 17\"\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M6.78027 13.6729C8.24805 13.6729 9.60156 13.1982 10.709 12.4072L14.875 16.5732C15.0684 16.7666 15.3232 16.8633 15.5957 16.8633C16.167 16.8633 16.5713 16.4238 16.5713 15.8613C16.5713 15.5977 16.4834 15.3516 16.29 15.1582L12.1504 11.0098C13.0205 9.86719 13.5391 8.45215 13.5391 6.91406C13.5391 3.19629 10.498 0.155273 6.78027 0.155273C3.0625 0.155273 0.0214844 3.19629 0.0214844 6.91406C0.0214844 10.6318 3.0625 13.6729 6.78027 13.6729ZM6.78027 12.2139C3.87988 12.2139 1.48047 9.81445 1.48047 6.91406C1.48047 4.01367 3.87988 1.61426 6.78027 1.61426C9.68066 1.61426 12.0801 4.01367 12.0801 6.91406C12.0801 9.81445 9.68066 12.2139 6.78027 12.2139Z\"\n  }));\n};\n\n// src/components/search-dialog.tsx\nvar import_lodash = __toESM(require_lodash(), 1);\n\n\n\n// src/icons/clear-icon.tsx\n\nvar ClearIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 30 30\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M15,0C6.716,0,0,6.716,0,15s6.716,15,15,15s15-6.716,15-15S23.284,0,15,0z M22,20.6L20.6,22L15,16.4L9.4,22L8,20.6l5.6-5.6 L8,9.4L9.4,8l5.6,5.6L20.6,8L22,9.4L16.4,15L22,20.6z\"\n  }));\n};\n\n// src/icons/loading-icon.tsx\n\nvar LoadingIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className: cs(\"notion-icon\", className)\n  }, rest), {\n    viewBox: \"0 0 24 24\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"defs\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"linearGradient\", {\n    x1: \"28.1542969%\",\n    y1: \"63.7402344%\",\n    x2: \"74.6289062%\",\n    y2: \"17.7832031%\",\n    id: \"linearGradient-1\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 1)\",\n    offset: \"0%\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"stop\", {\n    stopColor: \"rgba(164, 164, 164, 0)\",\n    stopOpacity: \"0\",\n    offset: \"100%\"\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    id: \"Page-1\",\n    stroke: \"none\",\n    strokeWidth: \"1\",\n    fill: \"none\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(-236.000000, -286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(238.000000, 286.000000)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"circle\", {\n    id: \"Oval-2\",\n    stroke: \"url(#linearGradient-1)\",\n    strokeWidth: \"4\",\n    cx: \"10\",\n    cy: \"12\",\n    r: \"10\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M10,2 C4.4771525,2 0,6.4771525 0,12\",\n    id: \"Oval-2\",\n    stroke: \"rgba(164, 164, 164, 1)\",\n    strokeWidth: \"4\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n    id: \"Rectangle-1\",\n    fill: \"rgba(164, 164, 164, 1)\",\n    x: \"8\",\n    y: \"0\",\n    width: \"4\",\n    height: \"4\",\n    rx: \"8\"\n  })))));\n};\n\n// src/components/search-dialog.tsx\nvar SearchDialog = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      query: \"\",\n      searchResult: null,\n      searchError: null\n    };\n    this._onAfterOpen = () => {\n      if (this._inputRef.current) {\n        this._inputRef.current.focus();\n      }\n    };\n    this._onChangeQuery = (e) => {\n      const query = e.target.value;\n      this.setState({ query });\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      } else {\n        this._search();\n      }\n    };\n    this._onClearQuery = () => {\n      this._onChangeQuery({ target: { value: \"\" } });\n    };\n    this._warmupSearch = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      yield searchNotion({\n        query: \"\",\n        ancestorId: rootBlockId\n      });\n    });\n    this._searchImpl = () => __async(this, null, function* () {\n      const { searchNotion, rootBlockId } = this.props;\n      const { query } = this.state;\n      if (!query.trim()) {\n        this.setState({ isLoading: false, searchResult: null, searchError: null });\n        return;\n      }\n      this.setState({ isLoading: true });\n      const result = yield searchNotion({\n        query,\n        ancestorId: rootBlockId\n      });\n      console.log(\"search\", query, result);\n      let searchResult = null;\n      let searchError = null;\n      if (result.error || result.errorId) {\n        searchError = result;\n      } else {\n        searchResult = __spreadValues({}, result);\n        const results = searchResult.results.map((result2) => {\n          var _a, _b;\n          const block = (_a = searchResult.recordMap.block[result2.id]) == null ? void 0 : _a.value;\n          if (!block)\n            return;\n          const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockTitle)(block, searchResult.recordMap);\n          if (!title) {\n            return;\n          }\n          result2.title = title;\n          result2.block = block;\n          result2.recordMap = searchResult.recordMap;\n          result2.page = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockParentPage)(block, searchResult.recordMap, {\n            inclusive: true\n          }) || block;\n          if (!result2.page.id) {\n            return;\n          }\n          if ((_b = result2.highlight) == null ? void 0 : _b.text) {\n            result2.highlight.html = result2.highlight.text.replace(/<gzkNfoUU>/gi, \"<b>\").replace(/<\\/gzkNfoUU>/gi, \"</b>\");\n          }\n          return result2;\n        }).filter(Boolean);\n        const searchResultsMap = results.reduce((map, result2) => __spreadProps(__spreadValues({}, map), {\n          [result2.page.id]: result2\n        }), {});\n        searchResult.results = Object.values(searchResultsMap);\n      }\n      if (this.state.query === query) {\n        this.setState({ isLoading: false, searchResult, searchError });\n      }\n    });\n    this._inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  }\n  componentDidMount() {\n    this._search = (0, import_lodash.default)(this._searchImpl.bind(this), 1e3);\n    this._warmupSearch();\n  }\n  render() {\n    const { isOpen, onClose } = this.props;\n    const { isLoading, query, searchResult, searchError } = this.state;\n    const hasQuery = !!query.trim();\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextConsumer, null, (ctx2) => {\n      const { components, defaultPageIcon, mapPageUrl } = ctx2;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Modal, {\n        isOpen,\n        contentLabel: \"Search\",\n        className: \"notion-search\",\n        overlayClassName: \"notion-search-overlay\",\n        onRequestClose: onClose,\n        onAfterOpen: this._onAfterOpen\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"quickFindMenu\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"searchBar\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"inlineIcon\"\n      }, isLoading ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon, {\n        className: \"loadingIcon\"\n      }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", {\n        className: \"searchInput\",\n        placeholder: \"Search\",\n        value: query,\n        ref: this._inputRef,\n        onChange: this._onChangeQuery\n      }), query && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        role: \"button\",\n        className: \"clearButton\",\n        onClick: this._onClearQuery\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearIcon, {\n        className: \"clearIcon\"\n      }))), hasQuery && searchResult && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, searchResult.results.length ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {\n        recordMap: searchResult.recordMap\n      }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"resultsPane\"\n      }, searchResult.results.map((result) => {\n        var _a;\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n          key: result.id,\n          className: cs(\"result\", \"notion-page-link\"),\n          href: mapPageUrl(result.page.id, searchResult.recordMap)\n        }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n          block: result.page,\n          defaultIcon: defaultPageIcon\n        }), ((_a = result.highlight) == null ? void 0 : _a.html) && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n          className: \"notion-search-result-highlight\",\n          dangerouslySetInnerHTML: {\n            __html: result.highlight.html\n          }\n        }));\n      })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"footer\", {\n        className: \"resultsFooter\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"resultsCount\"\n      }, searchResult.total), searchResult.total === 1 ? \" result\" : \" results\"))) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"No results\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsDetail\"\n      }, \"Try different search terms\"))), hasQuery && !searchResult && searchError && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResultsPane\"\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"noResults\"\n      }, \"Search error\"))));\n    });\n  }\n};\n\n// src/components/header.tsx\nvar Header = ({ block }) => {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"header\", {\n    className: \"notion-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-nav-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Breadcrumbs, {\n    block\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Search, {\n    block\n  })));\n};\nvar Breadcrumbs = ({ block, rootOnly = false }) => {\n  const { recordMap, mapPageUrl, components } = useNotionContext();\n  const breadcrumbs = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    const breadcrumbs2 = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getPageBreadcrumbs)(recordMap, block.id);\n    if (rootOnly) {\n      return [breadcrumbs2[0]].filter(Boolean);\n    }\n    return breadcrumbs2;\n  }, [recordMap, block.id, rootOnly]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"breadcrumbs\",\n    key: \"breadcrumbs\"\n  }, breadcrumbs.map((breadcrumb, index) => {\n    if (!breadcrumb) {\n      return null;\n    }\n    const pageLinkProps = {};\n    const componentMap = {\n      pageLink: components.PageLink\n    };\n    if (breadcrumb.active) {\n      componentMap.pageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({}, props));\n    } else {\n      pageLinkProps.href = mapPageUrl(breadcrumb.pageId);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      key: breadcrumb.pageId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(componentMap.pageLink, __spreadValues({\n      className: cs(\"breadcrumb\", breadcrumb.active && \"active\")\n    }, pageLinkProps), breadcrumb.icon && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n      className: \"icon\",\n      block: breadcrumb.block\n    }), breadcrumb.title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"title\"\n    }, breadcrumb.title)), index < breadcrumbs.length - 1 && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"spacer\"\n    }, \"/\"));\n  }));\n};\nvar Search = ({ block, search, title = \"Search\" }) => {\n  const { searchNotion, rootPageId } = useNotionContext();\n  const onSearchNotion = search || searchNotion;\n  const [isSearchOpen, setIsSearchOpen] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  const onOpenSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(true);\n  }, []);\n  const onCloseSearch = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(() => {\n    setIsSearchOpen(false);\n  }, []);\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__.useHotkeys)(\"cmd+p\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  (0,react_hotkeys_hook__WEBPACK_IMPORTED_MODULE_7__.useHotkeys)(\"cmd+k\", (event) => {\n    onOpenSearch();\n    event.preventDefault();\n    event.stopPropagation();\n  });\n  const hasSearch = !!onSearchNotion;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    role: \"button\",\n    className: cs(\"breadcrumb\", \"button\", \"notion-search-button\"),\n    onClick: onOpenSearch\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchIcon, {\n    className: \"searchIcon\"\n  }), title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"title\"\n  }, title)), isSearchOpen && hasSearch && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchDialog, {\n    isOpen: isSearchOpen,\n    rootBlockId: rootPageId || (block == null ? void 0 : block.id),\n    onClose: onCloseSearch,\n    searchNotion: onSearchNotion\n  }));\n};\n\n// src/components/asset-wrapper.tsx\n\nvar urlStyle = { width: \"100%\" };\nvar AssetWrapper = ({ blockId, block }) => {\n  var _a, _b, _c, _d, _e, _f;\n  const value = block;\n  const { components, mapPageUrl, rootDomain } = useNotionContext();\n  let isURL = false;\n  if (block.type === \"image\") {\n    const caption = (_c = (_b = (_a = value == null ? void 0 : value.properties) == null ? void 0 : _a.caption) == null ? void 0 : _b[0]) == null ? void 0 : _c[0];\n    if (caption) {\n      const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(caption, { uuid: true });\n      const isPage = caption.charAt(0) === \"/\" && id;\n      if (isPage || isValidURL(caption)) {\n        isURL = true;\n      }\n    }\n  }\n  const figure = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figure\", {\n    className: cs(\"notion-asset-wrapper\", `notion-asset-wrapper-${block.type}`, ((_d = value.format) == null ? void 0 : _d.block_full_width) && \"notion-asset-wrapper-full\", blockId)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Asset, {\n    block: value,\n    zoomable: !isURL\n  }, ((_e = value == null ? void 0 : value.properties) == null ? void 0 : _e.caption) && !isURL && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"figcaption\", {\n    className: \"notion-asset-caption\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n    value: value.properties.caption,\n    block\n  }))));\n  if (isURL) {\n    const caption = (_f = value == null ? void 0 : value.properties) == null ? void 0 : _f.caption[0][0];\n    const id = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.parsePageId)(caption, { uuid: true });\n    const isPage = caption.charAt(0) === \"/\" && id;\n    const captionHostname = extractHostname(caption);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n      style: urlStyle,\n      href: isPage ? mapPageUrl(id) : caption,\n      target: captionHostname && captionHostname !== rootDomain && !caption.startsWith(\"/\") ? \"blank_\" : null\n    }, figure);\n  }\n  return figure;\n};\nfunction isValidURL(str) {\n  const pattern = new RegExp(\"^(https?:\\\\/\\\\/)?((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*(\\\\?[;&a-z\\\\d%_.~+=-]*)?(\\\\#[-a-z\\\\d_]*)?$\", \"i\");\n  return !!pattern.test(str);\n}\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname;\n    return hostname;\n  } catch (err) {\n    return \"\";\n  }\n}\n\n// src/components/checkbox.tsx\n\n\n// src/icons/check.tsx\n\nfunction SvgCheck(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z\"\n  }));\n}\nvar check_default = SvgCheck;\n\n// src/components/checkbox.tsx\nvar Checkbox = ({ isChecked }) => {\n  let content = null;\n  if (isChecked) {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-checked\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(check_default, null));\n  } else {\n    content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-unchecked\"\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-property notion-property-checkbox\"\n  }, content);\n};\n\n// src/context.tsx\nvar DefaultLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\"\n}, props));\nvar DefaultLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultLink);\nvar DefaultPageLink = (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", __spreadValues({}, props));\nvar DefaultPageLinkMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(DefaultPageLink);\nvar DefaultEmbed = AssetWrapper;\nvar DefaultHeader = Header;\nvar dummyLink = (_a) => {\n  var _b = _a, { href, rel, target, title } = _b, rest = __objRest(_b, [\"href\", \"rel\", \"target\", \"title\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", __spreadValues({}, rest));\n};\nvar dummyComponent = (name) => () => {\n  console.warn(`Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`);\n  return null;\n};\nvar dummyOverrideFn = (_, defaultValueFn) => defaultValueFn();\nvar defaultComponents = {\n  Image: null,\n  Link: DefaultLinkMemo,\n  PageLink: DefaultPageLinkMemo,\n  Checkbox,\n  Callout: void 0,\n  Code: dummyComponent(\"Code\"),\n  Equation: dummyComponent(\"Equation\"),\n  Collection: dummyComponent(\"Collection\"),\n  Property: void 0,\n  propertyTextValue: dummyOverrideFn,\n  propertySelectValue: dummyOverrideFn,\n  propertyRelationValue: dummyOverrideFn,\n  propertyFormulaValue: dummyOverrideFn,\n  propertyTitleValue: dummyOverrideFn,\n  propertyPersonValue: dummyOverrideFn,\n  propertyFileValue: dummyOverrideFn,\n  propertyCheckboxValue: dummyOverrideFn,\n  propertyUrlValue: dummyOverrideFn,\n  propertyEmailValue: dummyOverrideFn,\n  propertyPhoneNumberValue: dummyOverrideFn,\n  propertyNumberValue: dummyOverrideFn,\n  propertyLastEditedTimeValue: dummyOverrideFn,\n  propertyCreatedTimeValue: dummyOverrideFn,\n  propertyDateValue: dummyOverrideFn,\n  Pdf: dummyComponent(\"Pdf\"),\n  Tweet: dummyComponent(\"Tweet\"),\n  Modal: dummyComponent(\"Modal\"),\n  Header: DefaultHeader,\n  Embed: DefaultEmbed\n};\nvar defaultNotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n  components: defaultComponents,\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: null,\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n  linkTableTitleProperties: true,\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n  zoom: null\n};\nvar ctx = react__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultNotionContext);\nvar NotionContextProvider = (_a) => {\n  var _b = _a, {\n    components: themeComponents = {},\n    children,\n    mapPageUrl,\n    mapImageUrl,\n    rootPageId\n  } = _b, rest = __objRest(_b, [\n    \"components\",\n    \"children\",\n    \"mapPageUrl\",\n    \"mapImageUrl\",\n    \"rootPageId\"\n  ]);\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === void 0) {\n      delete rest[key];\n    }\n  }\n  const wrappedThemeComponents = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadValues({}, themeComponents), [themeComponents]);\n  if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage);\n  }\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink);\n  }\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key];\n    }\n  }\n  const value = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadProps(__spreadValues(__spreadValues({}, defaultNotionContext), rest), {\n    rootPageId,\n    mapPageUrl: mapPageUrl != null ? mapPageUrl : defaultMapPageUrl(rootPageId),\n    mapImageUrl: mapImageUrl != null ? mapImageUrl : defaultMapImageUrl,\n    components: __spreadValues(__spreadValues({}, defaultComponents), wrappedThemeComponents)\n  }), [mapImageUrl, mapPageUrl, wrappedThemeComponents, rootPageId, rest]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ctx.Provider, {\n    value\n  }, children);\n};\nvar NotionContextConsumer = ctx.Consumer;\nvar useNotionContext = () => {\n  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(ctx);\n};\n\n// src/third-party/eval-formula.ts\nvar import_format = __toESM(require_format(), 1);\nvar import_getDate = __toESM(require_getDate(), 1);\nvar import_getDay = __toESM(require_getDay(), 1);\nvar import_getHours = __toESM(require_getHours(), 1);\nvar import_getMinutes = __toESM(require_getMinutes(), 1);\nvar import_getMonth = __toESM(require_getMonth(), 1);\nvar import_getYear = __toESM(require_getYear(), 1);\nvar import_add = __toESM(require_add(), 1);\nvar import_sub = __toESM(require_sub(), 1);\nvar import_intervalToDuration = __toESM(require_intervalToDuration(), 1);\n\nfunction evalFormula(formula, context) {\n  const _a = context, { endDate } = _a, ctx2 = __objRest(_a, [\"endDate\"]);\n  switch (formula == null ? void 0 : formula.type) {\n    case \"symbol\":\n      return formula.name === \"true\";\n    case \"constant\": {\n      const value = formula.value;\n      switch (formula.result_type) {\n        case \"text\":\n          return value;\n        case \"number\":\n          return parseFloat(value);\n        default:\n          return value;\n      }\n    }\n    case \"property\": {\n      const value = ctx2.properties[formula.id];\n      const text = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)(value);\n      switch (formula.result_type) {\n        case \"text\":\n          return text;\n        case \"number\":\n          return parseFloat(text);\n        case \"boolean\":\n          if (typeof text === \"string\") {\n            return text === \"true\";\n          } else {\n            return !!text;\n          }\n        case \"date\": {\n          const v = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getDateValue)(value);\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date);\n              return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n            } else {\n              const date = new Date(v.start_date);\n              return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n            }\n          } else {\n            return new Date(text);\n          }\n        }\n        default:\n          return text;\n      }\n    }\n    case \"operator\":\n    case \"function\":\n      return evalFunctionFormula(formula, ctx2);\n    default:\n      throw new Error(`invalid or unsupported formula \"${formula == null ? void 0 : formula.type}`);\n  }\n}\nfunction evalFunctionFormula(formula, ctx2) {\n  const args = formula == null ? void 0 : formula.args;\n  switch (formula.name) {\n    case \"and\":\n      return evalFormula(args[0], ctx2) && evalFormula(args[1], ctx2);\n    case \"empty\":\n      return !evalFormula(args[0], ctx2);\n    case \"equal\":\n      return evalFormula(args[0], ctx2) == evalFormula(args[1], ctx2);\n    case \"if\":\n      return evalFormula(args[0], ctx2) ? evalFormula(args[1], ctx2) : evalFormula(args[2], ctx2);\n    case \"larger\":\n      return evalFormula(args[0], ctx2) > evalFormula(args[1], ctx2);\n    case \"largerEq\":\n      return evalFormula(args[0], ctx2) >= evalFormula(args[1], ctx2);\n    case \"not\":\n      return !evalFormula(args[0], ctx2);\n    case \"or\":\n      return evalFormula(args[0], ctx2) || evalFormula(args[1], ctx2);\n    case \"smaller\":\n      return evalFormula(args[0], ctx2) < evalFormula(args[1], ctx2);\n    case \"smallerEq\":\n      return evalFormula(args[0], ctx2) <= evalFormula(args[1], ctx2);\n    case \"unequal\":\n      return evalFormula(args[0], ctx2) != evalFormula(args[1], ctx2);\n    case \"abs\":\n      return Math.abs(evalFormula(args[0], ctx2));\n    case \"add\": {\n      const v0 = evalFormula(args[0], ctx2);\n      const v1 = evalFormula(args[1], ctx2);\n      if (typeof v0 === \"number\") {\n        return v0 + +v1;\n      } else if (typeof v0 === \"string\") {\n        return v0 + `${v1}`;\n      } else {\n        return v0;\n      }\n    }\n    case \"cbrt\":\n      return Math.cbrt(evalFormula(args[0], ctx2));\n    case \"ceil\":\n      return Math.ceil(evalFormula(args[0], ctx2));\n    case \"divide\":\n      return evalFormula(args[0], ctx2) / evalFormula(args[1], ctx2);\n    case \"exp\":\n      return Math.exp(evalFormula(args[0], ctx2));\n    case \"floor\":\n      return Math.floor(evalFormula(args[0], ctx2));\n    case \"ln\":\n      return Math.log(evalFormula(args[0], ctx2));\n    case \"log10\":\n      return Math.log10(evalFormula(args[0], ctx2));\n    case \"log2\":\n      return Math.log2(evalFormula(args[0], ctx2));\n    case \"max\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce((acc, value) => Math.max(acc, value), Number.NEGATIVE_INFINITY);\n    }\n    case \"min\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.reduce((acc, value) => Math.min(acc, value), Number.POSITIVE_INFINITY);\n    }\n    case \"mod\":\n      return evalFormula(args[0], ctx2) % evalFormula(args[1], ctx2);\n    case \"multiply\":\n      return evalFormula(args[0], ctx2) * evalFormula(args[1], ctx2);\n    case \"pow\":\n      return Math.pow(evalFormula(args[0], ctx2), evalFormula(args[1], ctx2));\n    case \"round\":\n      return Math.round(evalFormula(args[0], ctx2));\n    case \"sign\":\n      return Math.sign(evalFormula(args[0], ctx2));\n    case \"sqrt\":\n      return Math.sqrt(evalFormula(args[0], ctx2));\n    case \"subtract\":\n      return evalFormula(args[0], ctx2) - evalFormula(args[1], ctx2);\n    case \"toNumber\":\n      return parseFloat(evalFormula(args[0], ctx2));\n    case \"unaryMinus\":\n      return evalFormula(args[0], ctx2) * -1;\n    case \"unaryPlus\":\n      return parseFloat(evalFormula(args[0], ctx2));\n    case \"concat\": {\n      const values = args.map((arg) => evalFormula(arg, ctx2));\n      return values.join(\"\");\n    }\n    case \"contains\":\n      return evalFormula(args[0], ctx2).includes(evalFormula(args[1], ctx2));\n    case \"format\": {\n      const value = evalFormula(args[0], ctx2);\n      switch (typeof value) {\n        case \"string\":\n          return value;\n        case \"object\":\n          if (value instanceof Date) {\n            return (0, import_format.default)(value, \"MMM d, YYY\");\n          } else {\n            return `${value}`;\n          }\n        case \"number\":\n        default:\n          return `${value}`;\n      }\n    }\n    case \"join\": {\n      const [delimiterArg, ...restArgs] = args;\n      const delimiter = evalFormula(delimiterArg, ctx2);\n      const values = restArgs.map((arg) => evalFormula(arg, ctx2));\n      return values.join(delimiter);\n    }\n    case \"length\":\n      return evalFormula(args[0], ctx2).length;\n    case \"replace\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex), replacement);\n    }\n    case \"replaceAll\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      const replacement = evalFormula(args[2], ctx2);\n      return value.replace(new RegExp(regex, \"g\"), replacement);\n    }\n    case \"slice\": {\n      const value = evalFormula(args[0], ctx2);\n      const beginIndex = evalFormula(args[1], ctx2);\n      const endIndex = args[2] ? evalFormula(args[2], ctx2) : value.length;\n      return value.slice(beginIndex, endIndex);\n    }\n    case \"test\": {\n      const value = evalFormula(args[0], ctx2);\n      const regex = evalFormula(args[1], ctx2);\n      return new RegExp(regex).test(value);\n    }\n    case \"date\":\n      return (0, import_getDate.default)(evalFormula(args[0], ctx2));\n    case \"dateAdd\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_add.default)(date, { [unit]: number });\n    }\n    case \"dateBetween\": {\n      const date1 = evalFormula(args[0], ctx2);\n      const date2 = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_intervalToDuration.default)({\n        start: date2,\n        end: date1\n      })[unit];\n    }\n    case \"dateSubtract\": {\n      const date = evalFormula(args[0], ctx2);\n      const number = evalFormula(args[1], ctx2);\n      const unit = evalFormula(args[1], ctx2);\n      return (0, import_sub.default)(date, { [unit]: number });\n    }\n    case \"day\":\n      return (0, import_getDay.default)(evalFormula(args[0], ctx2));\n    case \"end\":\n      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: true }));\n    case \"formatDate\": {\n      const date = evalFormula(args[0], ctx2);\n      const formatValue = evalFormula(args[1], ctx2).replace(\"dddd\", \"eeee\");\n      return (0, import_format.default)(date, formatValue);\n    }\n    case \"fromTimestamp\":\n      return new Date(evalFormula(args[0], ctx2));\n    case \"hour\":\n      return (0, import_getHours.default)(evalFormula(args[0], ctx2));\n    case \"minute\":\n      return (0, import_getMinutes.default)(evalFormula(args[0], ctx2));\n    case \"month\":\n      return (0, import_getMonth.default)(evalFormula(args[0], ctx2));\n    case \"now\":\n      return new Date();\n    case \"start\":\n      return evalFormula(args[0], __spreadProps(__spreadValues({}, ctx2), { endDate: false }));\n    case \"timestamp\":\n      return evalFormula(args[0], ctx2).getTime();\n    case \"year\":\n      return (0, import_getYear.default)(evalFormula(args[0], ctx2));\n    default:\n      throw new Error(`invalid or unsupported function formula \"${formula == null ? void 0 : formula.type}`);\n  }\n}\n\n// src/third-party/property.tsx\nvar Property = (props) => {\n  const { components } = useNotionContext();\n  if (components.Property) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Property, __spreadValues({}, props));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PropertyImplMemo, __spreadValues({}, props));\n  }\n};\nvar PropertyImpl = (props) => {\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext();\n  const {\n    schema,\n    data,\n    block,\n    collection,\n    inline = false,\n    linkToTitlePage = true\n  } = props;\n  const renderTextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function TextProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderDateValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function DateProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderRelationValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function RelationProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderFormulaValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FormulaProperty() {\n    let content2;\n    try {\n      let content3 = evalFormula(schema.formula, {\n        schema: collection == null ? void 0 : collection.schema,\n        properties: block == null ? void 0 : block.properties\n      });\n      if (isNaN(content3)) {\n      }\n      if (content3 instanceof Date) {\n        content3 = (0, import_format2.default)(content3, \"MMM d, YYY hh:mm aa\");\n      }\n    } catch (err) {\n      content2 = null;\n    }\n    return content2;\n  }, [block == null ? void 0 : block.properties, collection == null ? void 0 : collection.schema, schema]);\n  const renderTitleValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FormulaTitle() {\n    if (block && linkToTitlePage) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n        className: cs(\"notion-page-link\"),\n        href: mapPageUrl(block.id)\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageTitle, {\n        block\n      }));\n    } else {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: data,\n        block\n      });\n    }\n  }, [block, components, data, linkToTitlePage, mapPageUrl]);\n  const renderPersonValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function PersonProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      block\n    });\n  }, [block, data]);\n  const renderFileValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function FileProperty() {\n    const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n    return files.map((file, i) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.Link, {\n      key: i,\n      className: \"notion-property-file\",\n      href: mapImageUrl(file[2], block),\n      target: \"_blank\",\n      rel: \"noreferrer noopener\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(GracefulImage, {\n      alt: file[0],\n      src: mapImageUrl(file[2], block),\n      loading: \"lazy\"\n    })));\n  }, [block, components, data, mapImageUrl]);\n  const renderCheckboxValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function CheckboxProperty() {\n    const isChecked = data && data[0][0] === \"Yes\";\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-property-checkbox-container\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Checkbox, {\n      isChecked,\n      blockId: void 0\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-property-checkbox-text\"\n    }, schema.name));\n  }, [data, schema]);\n  const renderUrlValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function UrlProperty() {\n    const d = JSON.parse(JSON.stringify(data));\n    if (inline) {\n      try {\n        const url = new URL(d[0][0]);\n        d[0][0] = url.hostname.replace(/^www\\./, \"\");\n      } catch (err) {\n      }\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: d,\n      block,\n      inline,\n      linkProps: {\n        target: \"_blank\",\n        rel: \"noreferrer noopener\"\n      }\n    });\n  }, [block, data, inline]);\n  const renderEmailValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function EmailProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      linkProtocol: \"mailto\",\n      block\n    });\n  }, [block, data]);\n  const renderPhoneNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function PhoneNumberProperty() {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n      value: data,\n      linkProtocol: \"tel\",\n      block\n    });\n  }, [block, data]);\n  const renderNumberValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function NumberProperty() {\n    const value = parseFloat(data[0][0] || \"0\");\n    let output = \"\";\n    if (isNaN(value)) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: data,\n        block\n      });\n    } else {\n      switch (schema.number_format) {\n        case \"number_with_commas\":\n          output = (0, import_format_number.default)()(value);\n          break;\n        case \"percent\":\n          output = (0, import_format_number.default)({ suffix: \"%\" })(value * 100);\n          break;\n        case \"dollar\":\n          output = (0, import_format_number.default)({ prefix: \"$\", round: 2, padRight: 2 })(value);\n          break;\n        case \"euro\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20AC\", round: 2, padRight: 2 })(value);\n          break;\n        case \"pound\":\n          output = (0, import_format_number.default)({ prefix: \"\\xA3\", round: 2, padRight: 2 })(value);\n          break;\n        case \"yen\":\n          output = (0, import_format_number.default)({ prefix: \"\\xA5\", round: 0 })(value);\n          break;\n        case \"rupee\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20B9\", round: 2, padRight: 2 })(value);\n          break;\n        case \"won\":\n          output = (0, import_format_number.default)({ prefix: \"\\u20A9\", round: 0 })(value);\n          break;\n        case \"yuan\":\n          output = (0, import_format_number.default)({ prefix: \"CN\\xA5\", round: 2, padRight: 2 })(value);\n          break;\n        default:\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n            value: data,\n            block\n          });\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n        value: [[output]],\n        block\n      });\n    }\n  }, [block, data, schema]);\n  const renderCreatedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function CreatedTimeProperty() {\n    return (0, import_format2.default)(new Date(block == null ? void 0 : block.created_time), \"MMM d, YYY hh:mm aa\");\n  }, [block == null ? void 0 : block.created_time]);\n  const renderLastEditedTimeValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => function LastEditedTimeProperty() {\n    return (0, import_format2.default)(new Date(block == null ? void 0 : block.last_edited_time), \"MMM d, YYY hh:mm aa\");\n  }, [block == null ? void 0 : block.last_edited_time]);\n  if (!schema) {\n    return null;\n  }\n  let content = null;\n  if (data || schema.type === \"checkbox\" || schema.type === \"title\" || schema.type === \"formula\" || schema.type === \"created_by\" || schema.type === \"last_edited_by\" || schema.type === \"created_time\" || schema.type === \"last_edited_time\") {\n    switch (schema.type) {\n      case \"relation\":\n        content = components.propertyRelationValue(props, renderRelationValue);\n        break;\n      case \"formula\":\n        content = components.propertyFormulaValue(props, renderFormulaValue);\n        break;\n      case \"title\":\n        content = components.propertyTitleValue(props, renderTitleValue);\n        break;\n      case \"select\":\n      case \"multi_select\": {\n        const values = (data[0][0] || \"\").split(\",\");\n        content = values.map((value, index) => {\n          var _a;\n          const option = (_a = schema.options) == null ? void 0 : _a.find((option2) => value === option2.value);\n          const color = option == null ? void 0 : option.color;\n          return components.propertySelectValue(__spreadProps(__spreadValues({}, props), {\n            key: index,\n            value,\n            option,\n            color\n          }), () => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            key: index,\n            className: cs(`notion-property-${schema.type}-item`, color && `notion-item-${color}`)\n          }, value));\n        });\n        break;\n      }\n      case \"person\":\n        content = components.propertyPersonValue(props, renderPersonValue);\n        break;\n      case \"file\":\n        content = components.propertyFileValue(props, renderFileValue);\n        break;\n      case \"checkbox\":\n        content = components.propertyCheckboxValue(props, renderCheckboxValue);\n        break;\n      case \"url\":\n        content = components.propertyUrlValue(props, renderUrlValue);\n        break;\n      case \"email\":\n        content = components.propertyEmailValue(props, renderEmailValue);\n        break;\n      case \"phone_number\":\n        content = components.propertyPhoneNumberValue(props, renderPhoneNumberValue);\n        break;\n      case \"number\":\n        content = components.propertyNumberValue(props, renderNumberValue);\n        break;\n      case \"created_time\":\n        content = components.propertyCreatedTimeValue(props, renderCreatedTimeValue);\n        break;\n      case \"last_edited_time\":\n        content = components.propertyLastEditedTimeValue(props, renderLastEditedTimeValue);\n        break;\n      case \"created_by\":\n        break;\n      case \"last_edited_by\":\n        break;\n      case \"text\":\n        content = components.propertyTextValue(props, renderTextValue);\n        break;\n      case \"date\":\n        content = components.propertyDateValue(props, renderDateValue);\n        break;\n      default:\n        content = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text, {\n          value: data,\n          block\n        });\n        break;\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: `notion-property notion-property-${schema.type}`\n  }, content);\n};\nvar PropertyImplMemo = react__WEBPACK_IMPORTED_MODULE_0__.memo(PropertyImpl);\n\n// src/third-party/collection-row.tsx\nvar CollectionRow = ({ block, pageHeader = false, className }) => {\n  var _a, _b, _c, _d;\n  const { recordMap } = useNotionContext();\n  const collectionId = block.parent_id;\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const schemas = collection == null ? void 0 : collection.schema;\n  if (!collection || !schemas) {\n    return null;\n  }\n  let propertyIds = Object.keys(schemas).filter((id) => id !== \"title\");\n  if ((_b = collection.format) == null ? void 0 : _b.property_visibility) {\n    propertyIds = propertyIds.filter((id) => {\n      var _a2;\n      return ((_a2 = collection.format.property_visibility.find(({ property }) => property === id)) == null ? void 0 : _a2.visibility) !== \"hide\";\n    });\n  }\n  if ((_c = collection.format) == null ? void 0 : _c.collection_page_properties) {\n    const idToIndex = (_d = collection.format) == null ? void 0 : _d.collection_page_properties.reduce((acc, p, i) => __spreadProps(__spreadValues({}, acc), {\n      [p.property]: i\n    }), {});\n    propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b]);\n  } else {\n    propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-collection-row\", className)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-row-body\"\n  }, propertyIds.map((propertyId) => {\n    var _a2;\n    const schema = schemas[propertyId];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-row-property\",\n      key: propertyId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionColumnTitle, {\n      schema\n    }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-row-value\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data: (_a2 = block.properties) == null ? void 0 : _a2[propertyId],\n      propertyId,\n      block,\n      collection,\n      pageHeader\n    })));\n  })));\n};\n\n// src/icons/collection-view-table.tsx\n\nfunction SvgCollectionViewTable(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z\"\n  }));\n}\nvar collection_view_table_default = SvgCollectionViewTable;\n\n// src/icons/collection-view-board.tsx\n\nfunction SvgCollectionViewBoard(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z\"\n  }));\n}\nvar collection_view_board_default = SvgCollectionViewBoard;\n\n// src/icons/collection-view-gallery.tsx\n\nfunction SvgCollectionViewGallery(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z\"\n  }));\n}\nvar collection_view_gallery_default = SvgCollectionViewGallery;\n\n// src/icons/collection-view-list.tsx\n\nfunction SvgCollectionViewList(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z\"\n  }));\n}\nvar collection_view_list_default = SvgCollectionViewList;\n\n// src/icons/collection-view-calendar.tsx\n\nfunction SvgCollectionViewCalendar(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadValues({\n    viewBox: \"0 0 14 14\"\n  }, props), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z\"\n  }));\n}\nvar collection_view_calendar_default = SvgCollectionViewCalendar;\n\n// src/icons/collection-view-icon.tsx\nvar iconMap2 = {\n  table: collection_view_table_default,\n  board: collection_view_board_default,\n  gallery: collection_view_gallery_default,\n  list: collection_view_list_default,\n  calendar: collection_view_calendar_default\n};\nvar CollectionViewIcon = (_a) => {\n  var _b = _a, {\n    type\n  } = _b, rest = __objRest(_b, [\n    \"type\"\n  ]);\n  const icon = iconMap2[type];\n  if (!icon) {\n    return null;\n  }\n  return icon(rest);\n};\n\n// src/icons/chevron-down-icon.tsx\n\nvar ChevronDownIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 30 30\",\n    width: \"10\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"polygon\", {\n    points: \"15,17.4 4.8,7 2,9.8 15,23 28,9.8 25.2,7 \"\n  }));\n};\n\n// src/third-party/collection-view.tsx\n\n\n// src/third-party/collection-view-table.tsx\n\n\n// src/third-party/collection-group.tsx\n\nvar CollectionGroup = (_a) => {\n  var _b = _a, {\n    collectionViewComponent: CollectionViewComponent,\n    collection,\n    collectionGroup,\n    schema,\n    value,\n    hidden,\n    summaryProps,\n    detailsProps\n  } = _b, rest = __objRest(_b, [\n    \"collectionViewComponent\",\n    \"collection\",\n    \"collectionGroup\",\n    \"schema\",\n    \"value\",\n    \"hidden\",\n    \"summaryProps\",\n    \"detailsProps\"\n  ]);\n  if (hidden)\n    return null;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"details\", __spreadValues({\n    open: true,\n    className: \"notion-collection-group\"\n  }, detailsProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"summary\", __spreadValues({\n    className: \"notion-collection-group-title\"\n  }, summaryProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n    schema,\n    data: [[value]],\n    collection\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-board-th-count\"\n  }, collectionGroup == null ? void 0 : collectionGroup.total))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewComponent, __spreadValues({\n    collection,\n    collectionGroup\n  }, rest)));\n};\n\n// src/third-party/collection-utils.ts\nvar import_format3 = __toESM(require_format(), 1);\nfunction getCollectionGroups(collection, collectionView, collectionData, ...rest) {\n  var _a;\n  const elems = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_groups) || [];\n  return elems == null ? void 0 : elems.map(({ property, hidden, value: { value, type } }) => {\n    var _a2, _b;\n    const isUncategorizedValue = typeof value === \"undefined\";\n    const isDateValue = value == null ? void 0 : value.range;\n    const queryLabel = isUncategorizedValue ? \"uncategorized\" : isDateValue ? ((_a2 = value.range) == null ? void 0 : _a2.start_date) || ((_b = value.range) == null ? void 0 : _b.end_date) : (value == null ? void 0 : value.value) || value;\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`];\n    let queryValue = !isUncategorizedValue && (isDateValue || (value == null ? void 0 : value.value) || value);\n    let schema = collection.schema[property];\n    if (type === \"checkbox\" && value) {\n      queryValue = \"Yes\";\n    }\n    if (isDateValue) {\n      schema = {\n        type: \"text\",\n        name: \"text\"\n      };\n      queryValue = (0, import_format3.default)(new Date(queryLabel), \"MMM d, YYY hh:mm aa\");\n    }\n    return __spreadValues({\n      collectionGroup,\n      schema,\n      value: queryValue || \"No description\",\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup == null ? void 0 : collectionGroup.blockIds\n    }, rest);\n  });\n}\n\n// src/third-party/collection-view-table.tsx\nvar defaultBlockIds = [];\nvar CollectionViewTable = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}) => {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData, padding, width);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      collectionViewComponent: (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Table, __spreadProps(__spreadValues({}, props), {\n        padding,\n        width\n      })),\n      summaryProps: {\n        style: {\n          paddingLeft: padding,\n          paddingRight: padding\n        }\n      }\n    })));\n  }\n  const blockIds = ((_c = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Table, {\n    blockIds,\n    collection,\n    collectionView,\n    padding,\n    width\n  });\n};\nfunction Table({ blockIds = [], collection, collectionView, width, padding }) {\n  var _a;\n  const { recordMap, linkTableTitleProperties } = useNotionContext();\n  const tableStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    width,\n    maxWidth: width\n  }), [width]);\n  const tableViewStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    paddingLeft: padding,\n    paddingRight: padding\n  }), [padding]);\n  let properties = [];\n  if ((_a = collectionView.format) == null ? void 0 : _a.table_properties) {\n    properties = collectionView.format.table_properties.filter((p) => p.visible && collection.schema[p.property]);\n  } else {\n    properties = [{ property: \"title\" }].concat(Object.keys(collection.schema).filter((p) => p !== \"title\").map((property) => ({ property })));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table\",\n    style: tableStyle\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-view\",\n    style: tableViewStyle\n  }, !!properties.length && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header-inner\"\n  }, properties.map((p) => {\n    var _a2;\n    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n    const isTitle = p.property === \"title\";\n    const style = {};\n    if (p.width) {\n      style.width = p.width;\n    } else if (isTitle) {\n      style.width = 280;\n    } else {\n      style.width = 200;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-th\",\n      key: p.property\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-view-header-cell\",\n      style\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-table-view-header-cell-inner\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionColumnTitle, {\n      schema\n    }))));\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-header-placeholder\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-body\"\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-table-row\",\n    key: blockId\n  }, properties.map((p) => {\n    var _a2, _b, _c;\n    const schema = (_a2 = collection.schema) == null ? void 0 : _a2[p.property];\n    const block = (_b = recordMap.block[blockId]) == null ? void 0 : _b.value;\n    const data = (_c = block == null ? void 0 : block.properties) == null ? void 0 : _c[p.property];\n    const isTitle = p.property === \"title\";\n    const style = {};\n    if (p.width) {\n      style.width = p.width;\n    } else if (isTitle) {\n      style.width = 280;\n    } else {\n      style.width = 200;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      key: p.property,\n      className: cs(\"notion-table-cell\", `notion-table-cell-${schema.type}`),\n      style\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data,\n      block,\n      collection,\n      linkToTitlePage: linkTableTitleProperties\n    }));\n  })))))));\n}\n\n// src/third-party/collection-view-gallery.tsx\n\n\n// src/third-party/collection-card.tsx\n\n\nvar CollectionCard = (_a) => {\n  var _b = _a, {\n    collection,\n    block,\n    cover,\n    coverSize,\n    coverAspect,\n    properties,\n    className\n  } = _b, rest = __objRest(_b, [\n    \"collection\",\n    \"block\",\n    \"cover\",\n    \"coverSize\",\n    \"coverAspect\",\n    \"properties\",\n    \"className\"\n  ]);\n  var _a2, _b2, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;\n  const ctx2 = useNotionContext();\n  const { components, recordMap, mapPageUrl, mapImageUrl } = ctx2;\n  let coverContent = null;\n  const { page_cover_position = 0.5 } = block.format || {};\n  const coverPosition = (1 - page_cover_position) * 100;\n  if ((cover == null ? void 0 : cover.type) === \"page_content\") {\n    const contentBlockId = (_a2 = block.content) == null ? void 0 : _a2.find((blockId) => {\n      var _a3;\n      const block2 = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n      if ((block2 == null ? void 0 : block2.type) === \"image\") {\n        return true;\n      }\n    });\n    if (contentBlockId) {\n      const contentBlock = (_b2 = recordMap.block[contentBlockId]) == null ? void 0 : _b2.value;\n      const source = (_g = (_e = (_d = (_c = contentBlock.properties) == null ? void 0 : _c.source) == null ? void 0 : _d[0]) == null ? void 0 : _e[0]) != null ? _g : (_f = contentBlock.format) == null ? void 0 : _f.display_source;\n      if (source) {\n        const src = mapImageUrl(source, contentBlock);\n        const caption = (_j = (_i = (_h = contentBlock.properties) == null ? void 0 : _h.caption) == null ? void 0 : _i[0]) == null ? void 0 : _j[0];\n        coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n          src,\n          alt: caption || \"notion image\",\n          style: {\n            objectFit: coverAspect\n          }\n        });\n      }\n    }\n    if (!coverContent) {\n      coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"notion-collection-card-cover-empty\"\n      });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"page_cover\") {\n    const { page_cover } = block.format || {};\n    if (page_cover) {\n      const coverPosition2 = (1 - page_cover_position) * 100;\n      coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n        src: mapImageUrl(page_cover, block),\n        alt: (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)((_k = block.properties) == null ? void 0 : _k.title),\n        style: {\n          objectFit: coverAspect,\n          objectPosition: `center ${coverPosition2}%`\n        }\n      });\n    }\n  } else if ((cover == null ? void 0 : cover.type) === \"property\") {\n    const { property } = cover;\n    const schema = collection.schema[property];\n    const data = (_l = block.properties) == null ? void 0 : _l[property];\n    if (schema && data) {\n      if (schema.type === \"file\") {\n        const files = data.filter((v) => v.length === 2).map((f) => f.flat().flat());\n        const file = files[0];\n        if (file) {\n          coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            className: `notion-property-${schema.type}`\n          }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LazyImage, {\n            alt: file[0],\n            src: mapImageUrl(file[2], block),\n            style: {\n              objectFit: coverAspect,\n              objectPosition: `center ${coverPosition}%`\n            }\n          }));\n        }\n      } else {\n        coverContent = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n          propertyId: property,\n          schema,\n          data\n        });\n      }\n    }\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadProps(__spreadValues({}, ctx2), {\n    components: __spreadProps(__spreadValues({}, ctx2.components), {\n      Link: dummyLink,\n      PageLink: dummyLink\n    })\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, __spreadValues({\n    className: cs(\"notion-collection-card\", `notion-collection-card-size-${coverSize}`, className),\n    href: mapPageUrl(block.id)\n  }, rest), (coverContent || (cover == null ? void 0 : cover.type) !== \"none\") && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-cover\"\n  }, coverContent), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-body\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-card-property\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n    schema: collection.schema.title,\n    data: (_m = block == null ? void 0 : block.properties) == null ? void 0 : _m.title,\n    block,\n    collection\n  })), properties == null ? void 0 : properties.filter((p) => p.visible && p.property !== \"title\" && collection.schema[p.property]).map((p) => {\n    if (!block.properties)\n      return null;\n    const schema = collection.schema[p.property];\n    const data = block.properties[p.property];\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-card-property\",\n      key: p.property\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data,\n      block,\n      collection,\n      inline: true\n    }));\n  }))));\n};\n\n// src/third-party/collection-view-gallery.tsx\nvar defaultBlockIds2 = [];\nvar CollectionViewGallery = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      collectionViewComponent: Gallery\n    })));\n  }\n  const blockIds = ((_c = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds2;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Gallery, {\n    collectionView,\n    collection,\n    blockIds\n  });\n};\nfunction Gallery({ blockIds, collectionView, collection }) {\n  const { recordMap } = useNotionContext();\n  const {\n    gallery_cover = { type: \"none\" },\n    gallery_cover_size = \"medium\",\n    gallery_cover_aspect = \"cover\"\n  } = collectionView.format || {};\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-gallery\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-gallery-view\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-gallery-grid\", `notion-gallery-grid-size-${gallery_cover_size}`)\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block)\n      return null;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionCard, {\n      collection,\n      block,\n      cover: gallery_cover,\n      coverSize: gallery_cover_size,\n      coverAspect: gallery_cover_aspect,\n      properties: (_b = collectionView.format) == null ? void 0 : _b.gallery_properties,\n      key: blockId\n    });\n  }))));\n}\n\n// src/third-party/collection-view-list.tsx\n\nvar defaultBlockIds3 = [];\nvar CollectionViewList = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  var _a, _b, _c;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData);\n    return collectionGroups.map((group, key) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key\n    }, group), {\n      collectionViewComponent: List\n    })));\n  }\n  const blockIds = ((_c = (_b = collectionData[\"collection_group_results\"]) == null ? void 0 : _b.blockIds) != null ? _c : collectionData.blockIds) || defaultBlockIds3;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(List, {\n    blockIds,\n    collection,\n    collectionView\n  });\n};\nfunction List({ blockIds, collection, collectionView }) {\n  const { components, recordMap, mapPageUrl } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-collection\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-view\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-list-body\"\n  }, blockIds == null ? void 0 : blockIds.map((blockId) => {\n    var _a, _b, _c, _d;\n    const block = (_a = recordMap.block[blockId]) == null ? void 0 : _a.value;\n    if (!block)\n      return null;\n    const titleSchema = collection.schema.title;\n    const titleData = (_b = block == null ? void 0 : block.properties) == null ? void 0 : _b.title;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(components.PageLink, {\n      className: \"notion-list-item notion-page-link\",\n      href: mapPageUrl(block.id),\n      key: blockId\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-list-item-title\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema: titleSchema,\n      data: titleData,\n      block,\n      collection\n    })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-list-item-body\"\n    }, (_d = (_c = collectionView.format) == null ? void 0 : _c.list_properties) == null ? void 0 : _d.filter((p) => p.visible).map((p) => {\n      var _a2;\n      const schema = collection.schema[p.property];\n      const data = block && ((_a2 = block.properties) == null ? void 0 : _a2[p.property]);\n      if (!schema) {\n        return null;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"notion-list-item-property\",\n        key: p.property\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n        schema,\n        data,\n        block,\n        collection\n      }));\n    })));\n  }))));\n}\n\n// src/third-party/collection-view-board.tsx\n\n\n// src/icons/empty-icon.tsx\n\nvar EmptyIcon = (props) => {\n  const _a = props, { className } = _a, rest = __objRest(_a, [\"className\"]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", __spreadProps(__spreadValues({\n    className\n  }, rest), {\n    viewBox: \"0 0 14 14\",\n    width: \"14\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z\"\n  }));\n};\n\n// src/third-party/collection-view-board.tsx\nvar CollectionViewBoard = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}) => {\n  var _a;\n  const isGroupedCollection = (_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.collection_group_by;\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(collection, collectionView, collectionData, padding);\n    return collectionGroups.map((group, index) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionGroup, __spreadProps(__spreadValues({\n      key: index\n    }, group), {\n      summaryProps: {\n        style: {\n          paddingLeft: padding\n        }\n      },\n      collectionViewComponent: (props) => /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Board, __spreadValues({\n        padding\n      }, props))\n    })));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Board, {\n    padding,\n    collectionView,\n    collection,\n    collectionData\n  });\n};\nfunction Board({ collectionView, collectionData, collection, padding }) {\n  var _a, _b;\n  const { recordMap } = useNotionContext();\n  const {\n    board_cover = { type: \"none\" },\n    board_cover_size = \"medium\",\n    board_cover_aspect = \"cover\"\n  } = (collectionView == null ? void 0 : collectionView.format) || {};\n  const boardGroups = ((_a = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _a.board_columns) || ((_b = collectionView == null ? void 0 : collectionView.format) == null ? void 0 : _b.board_groups2) || [];\n  const boardStyle = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => ({\n    paddingLeft: padding\n  }), [padding]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-board-view\", `notion-board-view-size-${board_cover_size}`),\n    style: boardStyle\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header-inner\"\n  }, boardGroups.map((p, index) => {\n    var _a2, _b2, _c;\n    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n      return null;\n    }\n    const group = collectionData.board_columns.results[index];\n    const schema = collection.schema[p.property];\n    if (!group || !schema || p.hidden) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-th\",\n      key: index\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-th-body\"\n    }, ((_b2 = group.value) == null ? void 0 : _b2.value) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Property, {\n      schema,\n      data: [[(_c = group.value) == null ? void 0 : _c.value]],\n      collection\n    }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EmptyIcon, {\n      className: \"notion-board-th-empty\"\n    }), \" No Select\"), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"notion-board-th-count\"\n    }, group.total)));\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-header-placeholder\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-board-body\"\n  }, boardGroups.map((p, index) => {\n    var _a2, _b2, _c;\n    if (!((_a2 = collectionData.board_columns) == null ? void 0 : _a2.results)) {\n      return null;\n    }\n    const schema = collection.schema[p.property];\n    const group = collectionData[`results:select:${((_b2 = p == null ? void 0 : p.value) == null ? void 0 : _b2.value) || \"uncategorized\"}`];\n    if (!group || !schema || p.hidden) {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-board-group\",\n      key: index\n    }, (_c = group.blockIds) == null ? void 0 : _c.map((blockId) => {\n      var _a3, _b3;\n      const block = (_a3 = recordMap.block[blockId]) == null ? void 0 : _a3.value;\n      if (!block)\n        return null;\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionCard, {\n        className: \"notion-board-group-card\",\n        collection,\n        block,\n        cover: board_cover,\n        coverSize: board_cover_size,\n        coverAspect: board_cover_aspect,\n        properties: (_b3 = collectionView.format) == null ? void 0 : _b3.board_properties,\n        key: blockId\n      });\n    }));\n  }))));\n}\n\n// src/third-party/collection-view.tsx\nvar CollectionViewImpl = (props) => {\n  const { collectionView } = props;\n  switch (collectionView.type) {\n    case \"table\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewTable, __spreadValues({}, props));\n    case \"gallery\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewGallery, __spreadValues({}, props));\n    case \"list\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewList, __spreadValues({}, props));\n    case \"board\":\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewBoard, __spreadValues({}, props));\n    default:\n      console.warn(\"unsupported collection view\", collectionView);\n      return null;\n  }\n};\nvar CollectionView = react__WEBPACK_IMPORTED_MODULE_0__.memo(CollectionViewImpl);\n\n// src/third-party/collection.tsx\nvar isServer2 = typeof window === \"undefined\";\nvar Collection = ({ block, className, ctx: ctx2 }) => {\n  const context = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => __spreadValues({}, ctx2), [ctx2]);\n  if (block.type === \"page\") {\n    if (block.parent_table !== \"collection\") {\n      return null;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-page-properties\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionRow, {\n      block,\n      pageHeader: true,\n      className\n    })));\n  } else {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(NotionContextProvider, __spreadValues({}, context), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewBlock, {\n      block,\n      className\n    }));\n  }\n};\nvar CollectionViewBlock = ({ block, className }) => {\n  var _a, _b, _c;\n  const { recordMap, showCollectionViewDropdown } = useNotionContext();\n  const { view_ids: viewIds } = block;\n  const collectionId = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockCollectionId)(block, recordMap);\n  const [isMounted, setIsMounted] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  const defaultCollectionViewId = viewIds[0];\n  const [collectionState, setCollectionState] = (0,react_use__WEBPACK_IMPORTED_MODULE_2__.useLocalStorage)(block.id, {\n    collectionViewId: defaultCollectionViewId\n  });\n  const collectionViewId = isMounted && viewIds.find((id) => id === collectionState.collectionViewId) || defaultCollectionViewId;\n  const onChangeView = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((collectionViewId2) => {\n    console.log(\"change collection view\", collectionViewId2);\n    setCollectionState(__spreadProps(__spreadValues({}, collectionState), {\n      collectionViewId: collectionViewId2\n    }));\n  }, [collectionState, setCollectionState]);\n  let { width: windowWidth } = (0,react_use__WEBPACK_IMPORTED_MODULE_2__.useWindowSize)();\n  if (isServer2) {\n    windowWidth = 1024;\n  }\n  const collection = (_a = recordMap.collection[collectionId]) == null ? void 0 : _a.value;\n  const collectionView = (_b = recordMap.collection_view[collectionViewId]) == null ? void 0 : _b.value;\n  const collectionData = (_c = recordMap.collection_query[collectionId]) == null ? void 0 : _c[collectionViewId];\n  const parentPage = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getBlockParentPage)(block, recordMap);\n  const { style, width, padding } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(() => {\n    var _a2;\n    const style2 = {};\n    if ((collectionView == null ? void 0 : collectionView.type) !== \"table\" && (collectionView == null ? void 0 : collectionView.type) !== \"board\") {\n      return {\n        style: style2,\n        width: 0,\n        padding: 0\n      };\n    }\n    const width2 = windowWidth;\n    const maxNotionBodyWidth = 708;\n    let notionBodyWidth = maxNotionBodyWidth;\n    if ((_a2 = parentPage == null ? void 0 : parentPage.format) == null ? void 0 : _a2.page_full_width) {\n      notionBodyWidth = width2 - 2 * Math.min(96, width2 * 0.08) | 0;\n    } else {\n      notionBodyWidth = width2 < maxNotionBodyWidth ? width2 - width2 * 0.02 | 0 : maxNotionBodyWidth;\n    }\n    const padding2 = isServer2 && !isMounted ? 96 : (width2 - notionBodyWidth) / 2 | 0;\n    style2.paddingLeft = padding2;\n    style2.paddingRight = padding2;\n    return {\n      style: style2,\n      width: width2,\n      padding: padding2\n    };\n  }, [windowWidth, parentPage, collectionView == null ? void 0 : collectionView.type, isMounted]);\n  if (!(collection && collectionView && collectionData)) {\n    console.warn(\"skipping missing collection view for block\", block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    });\n    return null;\n  }\n  const title = (0,notion_utils__WEBPACK_IMPORTED_MODULE_1__.getTextContent)(collection.name).trim();\n  if (collection.icon) {\n    block.format = __spreadProps(__spreadValues({}, block.format), {\n      page_icon: collection.icon\n    });\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: cs(\"notion-collection\", className)\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-header\",\n    style\n  }, title && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"notion-collection-header-title\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PageIcon, {\n    block,\n    className: \"notion-page-title-icon\",\n    hideDefaultIcon: true\n  }), title), viewIds.length > 1 && showCollectionViewDropdown && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewDropdownMenu, {\n    collectionView,\n    collectionViewId,\n    viewIds,\n    onChangeView\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionView, {\n    collection,\n    collectionView,\n    collectionData,\n    padding,\n    width\n  }));\n};\nvar CollectionViewDropdownMenu = ({ collectionViewId, collectionView, viewIds, onChangeView }) => {\n  const { recordMap } = useNotionContext();\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Root, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Trigger, {\n    className: \"notion-collection-view-dropdown\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewColumnDesc, {\n    collectionView\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ChevronDownIcon, {\n    className: \"notion-collection-view-dropdown-icon\"\n  }))), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.Content, {\n    className: \"notion-collection-view-dropdown-content\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.RadioGroup, {\n    value: collectionViewId,\n    onValueChange: onChangeView\n  }, viewIds.map((viewId) => {\n    var _a;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__.RadioItem, {\n      key: viewId,\n      value: viewId,\n      className: cs(\"notion-collection-view-dropdown-content-item\", collectionViewId === viewId && \"notion-collection-view-dropdown-content-item-active\")\n    }, collectionViewId === viewId && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"notion-collection-view-dropdown-content-item-active-icon\"\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(check_default, null)), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewColumnDesc, {\n      collectionView: (_a = recordMap.collection_view[viewId]) == null ? void 0 : _a.value\n    }));\n  }))));\n};\nvar CollectionViewColumnDesc = (_a) => {\n  var _b = _a, { collectionView, className, children } = _b, rest = __objRest(_b, [\"collectionView\", \"className\", \"children\"]);\n  const { type } = collectionView;\n  const name = collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", __spreadValues({\n    className: cs(\"notion-collection-view-type\", className)\n  }, rest), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionViewIcon, {\n    className: \"notion-collection-view-type-icon\",\n    type\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"notion-collection-view-type-title\"\n  }, name), children);\n};\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-notion-x/build/third-party/collection.js\n");

/***/ })

};
;